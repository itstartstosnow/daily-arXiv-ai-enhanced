{"id": "2508.14925", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.14925", "abs": "https://arxiv.org/abs/2508.14925", "authors": ["Zhiqiang Wang", "Yichao Gao", "Yanting Wang", "Suyuan Liu", "Haifeng Sun", "Haoran Cheng", "Guanquan Shi", "Haohua Du", "Xiangyang Li"], "title": "MCPTox: A Benchmark for Tool Poisoning Attack on Real-World MCP Servers", "comment": null, "summary": "By providing a standardized interface for LLM agents to interact with\nexternal tools, the Model Context Protocol (MCP) is quickly becoming a\ncornerstone of the modern autonomous agent ecosystem. However, it creates novel\nattack surfaces due to untrusted external tools. While prior work has focused\non attacks injected through external tool outputs, we investigate a more\nfundamental vulnerability: Tool Poisoning, where malicious instructions are\nembedded within a tool's metadata without execution. To date, this threat has\nbeen primarily demonstrated through isolated cases, lacking a systematic,\nlarge-scale evaluation.\n  We introduce MCPTox, the first benchmark to systematically evaluate agent\nrobustness against Tool Poisoning in realistic MCP settings. MCPTox is\nconstructed upon 45 live, real-world MCP servers and 353 authentic tools. To\nachieve this, we design three distinct attack templates to generate a\ncomprehensive suite of 1312 malicious test cases by few-shot learning, covering\n10 categories of potential risks. Our evaluation on 20 prominent LLM agents\nsetting reveals a widespread vulnerability to Tool Poisoning, with o1-mini,\nachieving an attack success rate of 72.8\\%. We find that more capable models\nare often more susceptible, as the attack exploits their superior\ninstruction-following abilities. Finally, the failure case analysis reveals\nthat agents rarely refuse these attacks, with the highest refused rate\n(Claude-3.7-Sonnet) less than 3\\%, demonstrating that existing safety alignment\nis ineffective against malicious actions that use legitimate tools for\nunauthorized operation. Our findings create a crucial empirical baseline for\nunderstanding and mitigating this widespread threat, and we release MCPTox for\nthe development of verifiably safer AI agents. Our dataset is available at an\nanonymized repository: \\textit{https://anonymous.4open.science/r/AAAI26-7C02}."}
{"id": "2508.15031", "categories": ["cs.CR", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.15031", "abs": "https://arxiv.org/abs/2508.15031", "authors": ["Kaixiang Zhao", "Lincan Li", "Kaize Ding", "Neil Zhenqiang Gong", "Yue Zhao", "Yushun Dong"], "title": "A Systematic Survey of Model Extraction Attacks and Defenses: State-of-the-Art and Perspectives", "comment": null, "summary": "Machine learning (ML) models have significantly grown in complexity and\nutility, driving advances across multiple domains. However, substantial\ncomputational resources and specialized expertise have historically restricted\ntheir wide adoption. Machine-Learning-as-a-Service (MLaaS) platforms have\naddressed these barriers by providing scalable, convenient, and affordable\naccess to sophisticated ML models through user-friendly APIs. While this\naccessibility promotes widespread use of advanced ML capabilities, it also\nintroduces vulnerabilities exploited through Model Extraction Attacks (MEAs).\nRecent studies have demonstrated that adversaries can systematically replicate\na target model's functionality by interacting with publicly exposed interfaces,\nposing threats to intellectual property, privacy, and system security. In this\npaper, we offer a comprehensive survey of MEAs and corresponding defense\nstrategies. We propose a novel taxonomy that classifies MEAs according to\nattack mechanisms, defense approaches, and computing environments. Our analysis\ncovers various attack techniques, evaluates their effectiveness, and highlights\nchallenges faced by existing defenses, particularly the critical trade-off\nbetween preserving model utility and ensuring security. We further assess MEAs\nwithin different computing paradigms and discuss their technical, ethical,\nlegal, and societal implications, along with promising directions for future\nresearch. This systematic survey aims to serve as a valuable reference for\nresearchers, practitioners, and policymakers engaged in AI security and\nprivacy. Additionally, we maintain an online repository continuously updated\nwith related literature at https://github.com/kzhao5/ModelExtractionPapers."}
{"id": "2508.15036", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.15036", "abs": "https://arxiv.org/abs/2508.15036", "authors": ["Ruyi Ding", "Tianhong Xu", "Xinyi Shen", "Aidong Adam Ding", "Yunsi Fei"], "title": "MoEcho: Exploiting Side-Channel Attacks to Compromise User Privacy in Mixture-of-Experts LLMs", "comment": "This paper will appear in CCS 2025", "summary": "The transformer architecture has become a cornerstone of modern AI, fueling\nremarkable progress across applications in natural language processing,\ncomputer vision, and multimodal learning. As these models continue to scale\nexplosively for performance, implementation efficiency remains a critical\nchallenge. Mixture of Experts (MoE) architectures, selectively activating\nspecialized subnetworks (experts), offer a unique balance between model\naccuracy and computational cost. However, the adaptive routing in MoE\narchitectures, where input tokens are dynamically directed to specialized\nexperts based on their semantic meaning inadvertently opens up a new attack\nsurface for privacy breaches. These input-dependent activation patterns leave\ndistinctive temporal and spatial traces in hardware execution, which\nadversaries could exploit to deduce sensitive user data. In this work, we\npropose MoEcho, discovering a side channel analysis based attack surface that\ncompromises user privacy on MoE based systems. Specifically, in MoEcho, we\nintroduce four novel architectural side channels on different computing\nplatforms, including Cache Occupancy Channels and Pageout+Reload on CPUs, and\nPerformance Counter and TLB Evict+Reload on GPUs, respectively. Exploiting\nthese vulnerabilities, we propose four attacks that effectively breach user\nprivacy in large language models (LLMs) and vision language models (VLMs) based\non MoE architectures: Prompt Inference Attack, Response Reconstruction Attack,\nVisual Inference Attack, and Visual Reconstruction Attack. MoEcho is the first\nruntime architecture level security analysis of the popular MoE structure\ncommon in modern transformers, highlighting a serious security and privacy\nthreat and calling for effective and timely safeguards when harnessing MoE\nbased models for developing efficient large scale AI services."}
{"id": "2508.15042", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.15042", "abs": "https://arxiv.org/abs/2508.15042", "authors": ["Sima Arasteh", "Christophe Hauser"], "title": "When Machine Learning Meets Vulnerability Discovery: Challenges and Lessons Learned", "comment": null, "summary": "In recent years, machine learning has demonstrated impressive results in\nvarious fields, including software vulnerability detection. Nonetheless, using\nmachine learning to identify software vulnerabilities presents new challenges,\nespecially regarding the scale of data involved, which was not a factor in\ntraditional methods. Consequently, in spite of the rise of new\nmachine-learning-based approaches in that space, important shortcomings persist\nregarding their evaluation. First, researchers often fail to provide concrete\nstatistics about their training datasets, such as the number of samples for\neach type of vulnerability. Moreover, many methods rely on training with\nsemantically similar functions rather than directly on vulnerable programs.\nThis leads to uncertainty about the suitability of the datasets currently used\nfor training. Secondly, the choice of a model and the level of granularity at\nwhich models are trained also affect the effectiveness of such vulnerability\ndiscovery approaches.\n  In this paper, we explore the challenges of applying machine learning to\nvulnerability discovery. We also share insights from our two previous research\npapers, Bin2vec and BinHunter, which could enhance future research in this\nfield."}
{"id": "2508.15089", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.15089", "abs": "https://arxiv.org/abs/2508.15089", "authors": ["Arun Ganesh"], "title": "Tighter Privacy Analysis for Truncated Poisson Sampling", "comment": null, "summary": "We give a new privacy amplification analysis for truncated Poisson sampling,\na Poisson sampling variant that truncates a batch if it exceeds a given maximum\nbatch size."}
{"id": "2508.15100", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.15100", "abs": "https://arxiv.org/abs/2508.15100", "authors": ["Ehssan Mousavipour", "Andrey Dimanchev", "Majid Ghaderi"], "title": "Adaptive Anomaly Detection in Evolving Network Environments", "comment": null, "summary": "Distribution shift, a change in the statistical properties of data over time,\nposes a critical challenge for deep learning anomaly detection systems.\nExisting anomaly detection systems often struggle to adapt to these shifts.\nSpecifically, systems based on supervised learning require costly manual\nlabeling, while those based on unsupervised learning rely on clean data, which\nis difficult to obtain, for shift adaptation. Both of these requirements are\nchallenging to meet in practice. In this paper, we introduce NetSight, a\nframework for supervised anomaly detection in network data that continually\ndetects and adapts to distribution shifts in an online manner. NetSight\neliminates manual intervention through a novel pseudo-labeling technique and\nuses a knowledge distillation-based adaptation strategy to prevent catastrophic\nforgetting. Evaluated on three long-term network datasets, NetSight\ndemonstrates superior adaptation performance compared to state-of-the-art\nmethods that rely on manual labeling, achieving F1-score improvements of up to\n11.72%. This proves its robustness and effectiveness in dynamic networks that\nexperience distribution shifts over time."}
{"id": "2508.15172", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.15172", "abs": "https://arxiv.org/abs/2508.15172", "authors": ["Zheng Li", "Xiaoyang Dong", "Xiaoyun Wang"], "title": "Conditional Cube Attack on Round-Reduced ASCON", "comment": null, "summary": "This paper evaluates the secure level of authenticated encryption\n\\textsc{Ascon} against cube-like method. \\textsc{Ascon} submitted by Dobraunig\n\\emph{et~al.} is one of 16 survivors of the 3rd round CAESAR competition. The\ncube-like method is first used by Dinur \\emph{et~al.} to analyze Keccak keyed\nmodes. At CT-RSA 2015, Dobraunig \\emph{et~al.} applied this method to 5/6-round\nreduced \\textsc{Ascon}, whose structure is similar to Keccak keyed modes.\nHowever, for \\textsc{Ascon} the non-linear layer is more complex and state is\nmuch smaller, which make it hard for the attackers to select enough cube\nvariables that do not multiply with each other after the first round. This\nseems to be the reason why the best previous key-recovery attack is on 6-round\n\\textsc{Ascon}, while for Keccak keyed modes (Keccak-MAC and Keyak) the\nattacked round is no less than 7-round.\n  In this paper, we generalize the conditional cube attack proposed by Huang\n\\emph{et~al.}, and find new cubes depending on some key bit conditions for\n5/6-round reduced \\textsc{Ascon}, and translate the previous theoretic 6-round\nattack with $2^{66}$ time complexity to a practical one with $2^{40}$ time\ncomplexity. Moreover, we propose the first 7-round key-recovery attack on\n\\textsc{Ascon}. By introducing \\emph{the cube-like key-subset technique}, we\ndivide the full key space into many subsets according to different key\nconditions. For each key subset, we launch the cube tester to determine if the\nkey falls into it. Finally, we recover the full key space by testing all the\nkey subsets. The total time complexity is about $2^{103.9}$. In addition, for a\nweak-key subset, whose size is $2^{117}$, the attack is more efficient and\ncosts only $2^{77}$ time complexity. Those attacks do not threaten the full\nround (12 rounds) \\textsc{Ascon}."}
{"id": "2508.15183", "categories": ["cs.CR", "cs.DS"], "pdf": "https://arxiv.org/pdf/2508.15183", "abs": "https://arxiv.org/abs/2508.15183", "authors": ["Badih Ghazi", "Pritish Kamath", "Alexander Knop", "Ravi Kumar", "Pasin Manurangsi", "Chiyuan Zhang"], "title": "Private Hyperparameter Tuning with Ex-Post Guarantee", "comment": null, "summary": "The conventional approach in differential privacy (DP) literature formulates\nthe privacy-utility trade-off with a \"privacy-first\" perspective: for a\npredetermined level of privacy, a certain utility is achievable. However,\npractitioners often operate under a \"utility-first\" paradigm, prioritizing a\ndesired level of utility and then determining the corresponding privacy cost.\n  Wu et al. [2019] initiated a formal study of this \"utility-first\" perspective\nby introducing ex-post DP. They demonstrated that by adding correlated Laplace\nnoise and progressively reducing it on demand, a sequence of increasingly\naccurate estimates of a private parameter can be generated, with the privacy\ncost attributed only to the least noisy iterate released. This led to a Laplace\nmechanism variant that achieves a specified utility with minimal privacy loss.\nHowever, their work, and similar findings by Whitehouse et al. [2022], are\nprimarily limited to simple mechanisms based on Laplace or Gaussian noise.\n  In this paper, we significantly generalize these results. In particular, we\nextend the work of Wu et al. [2019] and Liu and Talwar [2019] to support any\nsequence of private estimators, incurring at most a doubling of the original\nprivacy budget. Furthermore, we demonstrate that hyperparameter tuning for\nthese estimators, including the selection of an optimal privacy budget, can be\nperformed without additional privacy cost. Finally, we extend our results to\nex-post Renyi DP, further broadening the applicability of utility-first privacy\nmechanisms."}
{"id": "2508.15252", "categories": ["cs.CR", "cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2508.15252", "abs": "https://arxiv.org/abs/2508.15252", "authors": ["Shiyi Yang", "Xinshu Li", "Guanglin Zhou", "Chen Wang", "Xiwei Xu", "Liming Zhu", "Lina Yao"], "title": "Retrieval-Augmented Review Generation for Poisoning Recommender Systems", "comment": null, "summary": "Recent studies have shown that recommender systems (RSs) are highly\nvulnerable to data poisoning attacks, where malicious actors inject fake user\nprofiles, including a group of well-designed fake ratings, to manipulate\nrecommendations. Due to security and privacy constraints in practice, attackers\ntypically possess limited knowledge of the victim system and thus need to craft\nprofiles that have transferability across black-box RSs. To maximize the attack\nimpact, the profiles often remains imperceptible. However, generating such\nhigh-quality profiles with the restricted resources is challenging. Some works\nsuggest incorporating fake textual reviews to strengthen the profiles; yet, the\npoor quality of the reviews largely undermines the attack effectiveness and\nimperceptibility under the practical setting.\n  To tackle the above challenges, in this paper, we propose to enhance the\nquality of the review text by harnessing in-context learning (ICL) capabilities\nof multimodal foundation models. To this end, we introduce a demonstration\nretrieval algorithm and a text style transfer strategy to augment the navie\nICL. Specifically, we propose a novel practical attack framework named RAGAN to\ngenerate high-quality fake user profiles, which can gain insights into the\nrobustness of RSs. The profiles are generated by a jailbreaker and\ncollaboratively optimized on an instructional agent and a guardian to improve\nthe attack transferability and imperceptibility. Comprehensive experiments on\nvarious real-world datasets demonstrate that RAGAN achieves the\nstate-of-the-art poisoning attack performance."}
{"id": "2508.15306", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.15306", "abs": "https://arxiv.org/abs/2508.15306", "authors": ["Henrietta Hegyi", "Laszlo Erdodi"], "title": "Connected and Exposed: Cybersecurity Risks, Regulatory Gaps, and Public Perception in Internet-Connected Vehicles", "comment": null, "summary": "The rapid advancement of Internet-connected vehicle technologies has\nintroduced a new era of smart mobility, while simultaneously raising\nsignificant cybersecurity and privacy concerns. This paper explores the\nevolving threat landscape associated with connected vehicles, focusing on risks\nsuch as unauthorized remote access and the potential leakage of personal data.\nTo assess the current state of protection, we conducted a comprehensive\nanalysis of 16 international standards and regulations, evaluating them from\nmultiple perspectives including regulatory strength, technical specificity,\ntreatment of supply chain risks, and approaches to personal data handling.\n  In parallel, we carried out a user-focused survey designed to map consumer\nattitudes toward smart cars. The survey investigated which types of vehicles\nusers trust and prefer, the reasons behind rejecting certain car types, their\nawareness of data-related risks, and whether they feel adequately informed\nabout how their vehicles handle data. By combining regulatory analysis with\nuser perception insights, this study aims to contribute to a more holistic\nunderstanding of the challenges and expectations surrounding connected vehicle\necosystems."}
{"id": "2508.15310", "categories": ["cs.CR", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2508.15310", "abs": "https://arxiv.org/abs/2508.15310", "authors": ["Hengyu An", "Jinghuai Zhang", "Tianyu Du", "Chunyi Zhou", "Qingming Li", "Tao Lin", "Shouling Ji"], "title": "IPIGuard: A Novel Tool Dependency Graph-Based Defense Against Indirect Prompt Injection in LLM Agents", "comment": "EMNLP 2025", "summary": "Large language model (LLM) agents are widely deployed in real-world\napplications, where they leverage tools to retrieve and manipulate external\ndata for complex tasks. However, when interacting with untrusted data sources\n(e.g., fetching information from public websites), tool responses may contain\ninjected instructions that covertly influence agent behaviors and lead to\nmalicious outcomes, a threat referred to as Indirect Prompt Injection (IPI).\nExisting defenses typically rely on advanced prompting strategies or auxiliary\ndetection models. While these methods have demonstrated some effectiveness,\nthey fundamentally rely on assumptions about the model's inherent security,\nwhich lacks structural constraints on agent behaviors. As a result, agents\nstill retain unrestricted access to tool invocations, leaving them vulnerable\nto stronger attack vectors that can bypass the security guardrails of the\nmodel. To prevent malicious tool invocations at the source, we propose a novel\ndefensive task execution paradigm, called IPIGuard, which models the agents'\ntask execution process as a traversal over a planned Tool Dependency Graph\n(TDG). By explicitly decoupling action planning from interaction with external\ndata, IPIGuard significantly reduces unintended tool invocations triggered by\ninjected instructions, thereby enhancing robustness against IPI attacks.\nExperiments on the AgentDojo benchmark show that IPIGuard achieves a superior\nbalance between effectiveness and robustness, paving the way for the\ndevelopment of safer agentic systems in dynamic environments."}
{"id": "2508.15386", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15386", "abs": "https://arxiv.org/abs/2508.15386", "authors": ["Sabine Houy", "Bruno Kreyssig", "Timothee Riom", "Alexandre Bartel", "Patrick McDaniel"], "title": "A Practical Guideline and Taxonomy to LLVM's Control Flow Integrity", "comment": null, "summary": "Memory corruption vulnerabilities remain one of the most severe threats to\nsoftware security. They often allow attackers to achieve arbitrary code\nexecution by redirecting a vulnerable program's control flow. While Control\nFlow Integrity (CFI) has gained traction to mitigate this exploitation path,\ndevelopers are not provided with any direction on how to apply CFI to\nreal-world software. In this work, we establish a taxonomy mapping LLVM's\nforward-edge CFI variants to memory corruption vulnerability classes, offering\nactionable guidance for developers seeking to deploy CFI incrementally in\nexisting codebases. Based on the Top 10 Known Exploited Vulnerabilities (KEV)\nlist, we identify four high-impact vulnerability categories and select one\nrepresentative CVE for each. We evaluate LLVM's CFI against each CVE and\nexplain why CFI blocks exploitation in two cases while failing in the other\ntwo, illustrating its potential and current limitations. Our findings support\ninformed deployment decisions and provide a foundation for improving the\npractical use of CFI in production systems."}
{"id": "2508.15541", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.15541", "abs": "https://arxiv.org/abs/2508.15541", "authors": ["Bingguang Lu", "Hongsheng Hu", "Yuantian Miao", "Shaleeza Sohail", "Chaoxiang He", "Shuo Wang", "Xiao Chen"], "title": "BadFU: Backdoor Federated Learning through Adversarial Machine Unlearning", "comment": null, "summary": "Federated learning (FL) has been widely adopted as a decentralized training\nparadigm that enables multiple clients to collaboratively learn a shared model\nwithout exposing their local data. As concerns over data privacy and regulatory\ncompliance grow, machine unlearning, which aims to remove the influence of\nspecific data from trained models, has become increasingly important in the\nfederated setting to meet legal, ethical, or user-driven demands. However,\nintegrating unlearning into FL introduces new challenges and raises largely\nunexplored security risks. In particular, adversaries may exploit the\nunlearning process to compromise the integrity of the global model. In this\npaper, we present the first backdoor attack in the context of federated\nunlearning, demonstrating that an adversary can inject backdoors into the\nglobal model through seemingly legitimate unlearning requests. Specifically, we\npropose BadFU, an attack strategy where a malicious client uses both backdoor\nand camouflage samples to train the global model normally during the federated\ntraining process. Once the client requests unlearning of the camouflage\nsamples, the global model transitions into a backdoored state. Extensive\nexperiments under various FL frameworks and unlearning strategies validate the\neffectiveness of BadFU, revealing a critical vulnerability in current federated\nunlearning practices and underscoring the urgent need for more secure and\nrobust federated unlearning mechanisms."}
{"id": "2508.15606", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.15606", "abs": "https://arxiv.org/abs/2508.15606", "authors": ["Yu Yang", "Zhenyuan Li", "Xiandong Ran", "Jiahao Liu", "Jiahui Wang", "Bo Yu", "Shouling Ji"], "title": "Towards Scalable and Interpretable Mobile App Risk Analysis via Large Language Models", "comment": null, "summary": "Mobile application marketplaces are responsible for vetting apps to identify\nand mitigate security risks. Current vetting processes are labor-intensive,\nrelying on manual analysis by security professionals aided by semi-automated\ntools. To address this inefficiency, we propose Mars, a system that leverages\nLarge Language Models (LLMs) for automated risk identification and profiling.\nMars is designed to concurrently analyze multiple applications across diverse\nrisk categories with minimal human intervention. To enhance analytical\nprecision and operational efficiency, Mars leverages a pre-constructed risk\nidentification tree to extract relevant indicators from high-dimensional\napplication features. This initial step filters the data, reducing the input\nvolume for the LLM and mitigating the potential for model hallucination induced\nby irrelevant features. The extracted indicators are then subjected to LLM\nanalysis for final risk determination. Furthermore, Mars automatically\ngenerates a comprehensive evidence chain for each assessment, documenting the\nanalytical process to provide transparent justification. These chains are\ndesigned to facilitate subsequent manual review and to inform enforcement\ndecisions, such as application delisting. The performance of Mars was evaluated\non a real-world dataset from a partner Android marketplace. The results\ndemonstrate that Mars attained an F1-score of 0.838 in risk identification and\nan F1-score of 0.934 in evidence retrieval. To assess its practical\napplicability, a user study involving 20 expert analysts was conducted, which\nindicated that Mars yielded a substantial efficiency gain, ranging from 60% to\n90%, over conventional manual analysis."}
