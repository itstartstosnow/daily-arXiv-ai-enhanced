{"id": "2509.09706", "categories": ["cs.CR", "cs.AI", "cs.CL", "I.2; H.3.3"], "pdf": "https://arxiv.org/pdf/2509.09706", "abs": "https://arxiv.org/abs/2509.09706", "authors": ["Taniya Gidatkar", "Oluwaseun Ajao", "Matthew Shardlow"], "title": "Differential Robustness in Transformer Language Models: Empirical Evaluation Under Adversarial Text Attacks", "comment": "8 pages, 4 tables, to appear in proceedings of Recent Advances in\n  Natural Language Processing (RANLP 2025) and ACL Anthology", "summary": "This study evaluates the resilience of large language models (LLMs) against\nadversarial attacks, specifically focusing on Flan-T5, BERT, and RoBERTa-Base.\nUsing systematically designed adversarial tests through TextFooler and\nBERTAttack, we found significant variations in model robustness. RoBERTa-Base\nand FlanT5 demonstrated remarkable resilience, maintaining accuracy even when\nsubjected to sophisticated attacks, with attack success rates of 0%. In\ncontrast. BERT-Base showed considerable vulnerability, with TextFooler\nachieving a 93.75% success rate in reducing model accuracy from 48% to just 3%.\nOur research reveals that while certain LLMs have developed effective defensive\nmechanisms, these safeguards often require substantial computational resources.\nThis study contributes to the understanding of LLM security by identifying\nexisting strengths and weaknesses in current safeguarding approaches and\nproposes practical recommendations for developing more efficient and effective\ndefensive strategies."}
{"id": "2509.09787", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.09787", "abs": "https://arxiv.org/abs/2509.09787", "authors": ["Nojan Sheybani", "Alessandro Pegoraro", "Jonathan Knauer", "Phillip Rieger", "Elissa Mollakuqe", "Farinaz Koushanfar", "Ahmad-Reza Sadeghi"], "title": "ZORRO: Zero-Knowledge Robustness and Privacy for Split Learning (Full Version)", "comment": "Full version of CCS 2025 paper", "summary": "Split Learning (SL) is a distributed learning approach that enables\nresource-constrained clients to collaboratively train deep neural networks\n(DNNs) by offloading most layers to a central server while keeping in- and\noutput layers on the client-side. This setup enables SL to leverage server\ncomputation capacities without sharing data, making it highly effective in\nresource-constrained environments dealing with sensitive data. However, the\ndistributed nature enables malicious clients to manipulate the training\nprocess. By sending poisoned intermediate gradients, they can inject backdoors\ninto the shared DNN. Existing defenses are limited by often focusing on\nserver-side protection and introducing additional overhead for the server. A\nsignificant challenge for client-side defenses is enforcing malicious clients\nto correctly execute the defense algorithm.\n  We present ZORRO, a private, verifiable, and robust SL defense scheme.\nThrough our novel design and application of interactive zero-knowledge proofs\n(ZKPs), clients prove their correct execution of a client-located defense\nalgorithm, resulting in proofs of computational integrity attesting to the\nbenign nature of locally trained DNN portions. Leveraging the frequency\nrepresentation of model partitions enables ZORRO to conduct an in-depth\ninspection of the locally trained models in an untrusted environment, ensuring\nthat each client forwards a benign checkpoint to its succeeding client. In our\nextensive evaluation, covering different model architectures as well as various\nattack strategies and data scenarios, we show ZORRO's effectiveness, as it\nreduces the attack success rate to less than 6\\% while causing even for models\nstoring \\numprint{1000000} parameters on the client-side an overhead of less\nthan 10 seconds."}
{"id": "2509.09942", "categories": ["cs.CR", "cs.AI", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.09942", "abs": "https://arxiv.org/abs/2509.09942", "authors": ["Lei Yu", "Jingyuan Zhang", "Xin Wang", "Jiajia Ma", "Li Yang", "Fengjun Zhang"], "title": "SmartCoder-R1: Towards Secure and Explainable Smart Contract Generation with Security-Aware Group Relative Policy Optimization", "comment": null, "summary": "Smart contracts automate the management of high-value assets, where\nvulnerabilities can lead to catastrophic financial losses. This challenge is\namplified in Large Language Models (LLMs) by two interconnected failures: they\noperate as unauditable \"black boxes\" lacking a transparent reasoning process,\nand consequently, generate code riddled with critical security vulnerabilities.\nTo address both issues, we propose SmartCoder-R1 (based on Qwen2.5-Coder-7B), a\nnovel framework for secure and explainable smart contract generation. It begins\nwith Continual Pre-training (CPT) to specialize the model. We then apply Long\nChain-of-Thought Supervised Fine-Tuning (L-CoT SFT) on 7,998 expert-validated\nreasoning-and-code samples to train the model to emulate human security\nanalysis. Finally, to directly mitigate vulnerabilities, we employ\nSecurity-Aware Group Relative Policy Optimization (S-GRPO), a reinforcement\nlearning phase that refines the generation policy by optimizing a weighted\nreward signal for compilation success, security compliance, and format\ncorrectness. Evaluated against 17 baselines on a benchmark of 756 real-world\nfunctions, SmartCoder-R1 establishes a new state of the art, achieving top\nperformance across five key metrics: a ComPass of 87.70%, a VulRate of 8.60%, a\nSafeAval of 80.16%, a FuncRate of 53.84%, and a FullRate of 50.53%. This\nFullRate marks a 45.79% relative improvement over the strongest baseline,\nDeepSeek-R1. Crucially, its generated reasoning also excels in human\nevaluations, achieving high-quality ratings for Functionality (82.7%), Security\n(85.3%), and Clarity (90.7%)."}
{"id": "2509.09950", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.09950", "abs": "https://arxiv.org/abs/2509.09950", "authors": ["Pouneh Nikkhah Bahrami", "Dylan Cutler", "Igor Bilogrevic"], "title": "Byte by Byte: Unmasking Browser Fingerprinting at the Function Level Using V8 Bytecode Transformers", "comment": null, "summary": "Browser fingerprinting enables persistent cross-site user tracking via subtle\ntechniques that often evade conventional defenses or cause website breakage\nwhen script-level blocking countermeasures are applied. Addressing these\nchallenges requires detection methods offering both function-level precision to\nminimize breakage and inherent robustness against code obfuscation and URL\nmanipulation.\n  We introduce ByteDefender, the first system leveraging V8 engine bytecode to\ndetect fingerprinting operations specifically at the JavaScript function level.\nA Transformer-based classifier, trained offline on bytecode sequences,\naccurately identifies functions exhibiting fingerprinting behavior. We develop\nand evaluate light-weight signatures derived from this model to enable\nlow-overhead, on-device matching against function bytecode during compilation\nbut prior to execution, which only adds a 4% (average) latency to the page load\ntime. This mechanism facilitates targeted, real-time prevention of\nfingerprinting function execution, thereby preserving legitimate script\nfunctionality. Operating directly on bytecode ensures inherent resilience\nagainst common code obfuscation and URL-based evasion. Our evaluation on the\ntop 100k websites demonstrates high detection accuracy at both function- and\nscript-level, with substantial improvements over state-of-the-art AST-based\nmethods, particularly in robustness against obfuscation. ByteDefender offers a\npractical framework for effective, precise, and robust fingerprinting\nmitigation."}
{"id": "2509.09970", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.09970", "abs": "https://arxiv.org/abs/2509.09970", "authors": ["Seyed Moein Abtahi", "Akramul Azim"], "title": "Securing LLM-Generated Embedded Firmware through AI Agent-Driven Validation and Patching", "comment": null, "summary": "Large Language Models (LLMs) show promise in generating firmware for embedded\nsystems, but often introduce security flaws and fail to meet real-time\nperformance constraints. This paper proposes a three-phase methodology that\ncombines LLM-based firmware generation with automated security validation and\niterative refinement in a virtualized environment. Using structured prompts,\nmodels like GPT-4 generate firmware for networking and control tasks, deployed\non FreeRTOS via QEMU. These implementations are tested using fuzzing, static\nanalysis, and runtime monitoring to detect vulnerabilities such as buffer\noverflows (CWE-120), race conditions (CWE-362), and denial-of-service threats\n(CWE-400). Specialized AI agents for Threat Detection, Performance\nOptimization, and Compliance Verification collaborate to improve detection and\nremediation. Identified issues are categorized using CWE, then used to prompt\ntargeted LLM-generated patches in an iterative loop. Experiments show a 92.4\\%\nVulnerability Remediation Rate (37.3\\% improvement), 95.8\\% Threat Model\nCompliance, and 0.87 Security Coverage Index. Real-time metrics include 8.6ms\nworst-case execution time and 195{\\mu}s jitter. This process enhances firmware\nsecurity and performance while contributing an open-source dataset for future\nresearch."}
{"id": "2509.09989", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.09989", "abs": "https://arxiv.org/abs/2509.09989", "authors": ["Priyanka Rushikesh Chaudhary", "Manan Gupta", "Jabez Christopher", "Putrevu Venkata Sai Charan", "Rajib Ranjan Maiti"], "title": "rCamInspector: Building Reliability and Trust on IoT (Spy) Camera Detection using XAI", "comment": null, "summary": "The classification of network traffic using machine learning (ML) models is\none of the primary mechanisms to address the security issues in IoT networks\nand/or IoT devices. However, the ML models often act as black-boxes that create\na roadblock to take critical decision based on the model output. To address\nthis problem, we design and develop a system, called rCamInspector, that\nemploys Explainable AI (XAI) to provide reliable and trustworthy explanations\nto model output. rCamInspector adopts two classifiers, Flow Classifier -\ncategorizes a flow into one of four classes, IoTCam, Conf, Share and Others,\nand SmartCam Classifier - classifies an IoTCam flow into one of six classes,\nNetatmo, Spy Clock, Canary, D3D, Ezviz, V380 Spy Bulb; both are IP address and\ntransport port agnostic. rCamInspector is evaluated using 38GB of network\ntraffic and our results show that XGB achieves the highest accuracy of 92% and\n99% in the Flow and SmartCam classifiers respectively among eight supervised ML\nmodels. We analytically show that the traditional mutual information (MI) based\nfeature importance cannot provide enough reliability on the model output of XGB\nin either classifiers. Using SHAP and LIME, we show that a separate set of\nfeatures can be picked up to explain a correct prediction of XGB. For example,\nthe feature Init Bwd Win Byts turns out to have the highest SHAP values to\nsupport the correct prediction of both IoTCam in Flow Classifier and Netatmo\nclass in SmartCam Classifier. To evaluate the faithfulness of the explainers on\nour dataset, we show that both SHAP and LIME have a consistency of more than\n0.7 and a sufficiency of 1.0. Comparing with existing works, we show that\nrCamInspector achieves a better accuracy (99%), precision (99%), and false\nnegative rate (0.7%)."}
{"id": "2509.10165", "categories": ["cs.CR", "cs.CY"], "pdf": "https://arxiv.org/pdf/2509.10165", "abs": "https://arxiv.org/abs/2509.10165", "authors": ["Matthew J. Schneider", "James Bailie", "Dawn Iacobucci"], "title": "Why Data Anonymization Has Not Taken Off", "comment": "15 pages", "summary": "Companies are looking to data anonymization research $\\unicode{x2013}$\nincluding differential private and synthetic data methods $\\unicode{x2013}$ for\nsimple and straightforward compliance solutions. But data anonymization has not\ntaken off in practice because it is anything but simple to implement. For one,\nit requires making complex choices which are case dependent, such as the domain\nof the dataset to anonymize; the units to protect; the scope where the data\nprotection should extend to; and the standard of protection. Each variation of\nthese choices changes the very meaning, as well as the practical implications,\nof differential privacy (or of any other measure of data anonymization). Yet\ndifferential privacy is frequently being branded as the same privacy guarantee\nregardless of variations in these choices. Some data anonymization methods can\nbe effective, but only when the insights required are much larger than the unit\nof protection. Given that businesses care about profitability, any solution\nmust preserve the patterns between a firm's data and that profitability. As a\nresult, data anonymization solutions usually need to be bespoke and\ncase-specific, which reduces their scalability. Companies should not expect\neasy wins, but rather recognize that anonymization is just one approach to data\nprivacy with its own particular advantages and drawbacks, while the best\nstrategies jointly leverage the full range of approaches to data privacy and\nsecurity in combination."}
{"id": "2509.10206", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.10206", "abs": "https://arxiv.org/abs/2509.10206", "authors": ["Federica Uccello", "Simin Nadjm-Tehrani"], "title": "Investigating Feature Attribution for 5G Network Intrusion Detection", "comment": null, "summary": "With the rise of fifth-generation (5G) networks in critical applications, it\nis urgent to move from detection of malicious activity to systems capable of\nproviding a reliable verdict suitable for mitigation. In this regard,\nunderstanding and interpreting machine learning (ML) models' security alerts is\ncrucial for enabling actionable incident response orchestration. Explainable\nArtificial Intelligence (XAI) techniques are expected to enhance trust by\nproviding insights into why alerts are raised. A dominant approach\nstatistically associates feature sets that can be correlated to a given alert.\nThis paper starts by questioning whether such attribution is relevant for\nfuture generation communication systems, and investigates its merits in\ncomparison with an approach based on logical explanations. We extensively study\ntwo methods, SHAP and VoTE-XAI, by analyzing their interpretations of alerts\ngenerated by an XGBoost model in three different use cases with several 5G\ncommunication attacks. We identify three metrics for assessing explanations:\nsparsity, how concise they are; stability, how consistent they are across\nsamples from the same attack type; and efficiency, how fast an explanation is\ngenerated. As an example, in a 5G network with 92 features, 6 were deemed\nimportant by VoTE-XAI for a Denial of Service (DoS) variant, ICMPFlood, while\nSHAP identified over 20. More importantly, we found a significant divergence\nbetween features selected by SHAP and VoTE-XAI. However, none of the top-ranked\nfeatures selected by SHAP were missed by VoTE-XAI. When it comes to efficiency\nof providing interpretations, we found that VoTE-XAI is significantly more\nresponsive, e.g. it provides a single explanation in under 0.002 seconds, in a\nhigh-dimensional setting (478 features)."}
{"id": "2509.10213", "categories": ["cs.CR", "D.4.6; K.6.5"], "pdf": "https://arxiv.org/pdf/2509.10213", "abs": "https://arxiv.org/abs/2509.10213", "authors": ["Ming Zhou", "Xupu Hu", "Zhihao Wang", "Haining Wang", "Hui Wen", "Limin Sun", "Peng Zhang"], "title": "Dynamic Vulnerability Patching for Heterogeneous Embedded Systems Using Stack Frame Reconstruction", "comment": "Accepted/To be published in ACM CCS 2025", "summary": "Existing dynamic vulnerability patching techniques are not well-suited for\nembedded devices, especially mission-critical ones such as medical equipment,\nas they have limited computational power and memory but uninterrupted service\nrequirements. Those devices often lack sufficient idle memory for dynamic\npatching, and the diverse architectures of embedded systems further complicate\nthe creation of patch triggers that are compatible across various system\nkernels and hardware platforms. To address these challenges, we propose a hot\npatching framework called StackPatch that facilitates patch development based\non stack frame reconstruction. StackPatch introduces different triggering\nstrategies to update programs stored in memory units. We leverage the\nexception-handling mechanisms commonly available in embedded processors to\nenhance StackPatch's adaptability across different processor architectures for\ncontrol flow redirection. We evaluated StackPatch on embedded devices featuring\nthree major microcontroller (MCU) architectures: ARM, RISC-V, and Xtensa. In\nthe experiments, we used StackPatch to successfully fix 102 publicly disclosed\nvulnerabilities in real-time operating systems (RTOS). We applied patching to\nmedical devices, soft programmable logic controllers (PLCs), and network\nservices, with StackPatch consistently completing each vulnerability\nremediation in less than 260 MCU clock cycles."}
{"id": "2509.10224", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.10224", "abs": "https://arxiv.org/abs/2509.10224", "authors": ["Reynaldo Gil-Pons", "Sjouke Mauw", "Rolando Trujillo-Rasua"], "title": "Empirical Evaluation of Memory-Erasure Protocols", "comment": "Published at SECRYPT 2025", "summary": "Software-based memory-erasure protocols are two-party communication protocols\nwhere a verifier instructs a computational device to erase its memory and send\na proof of erasure. They aim at guaranteeing that low-cost IoT devices are free\nof malware by putting them back into a safe state without requiring secure\nhardware or physical manipulation of the device. Several software-based\nmemory-erasure protocols have been introduced and theoretically analysed. Yet,\nmany of them have not been tested for their feasibility, performance and\nsecurity on real devices, which hinders their industry adoption. This article\nreports on the first empirical analysis of software-based memory-erasure\nprotocols with respect to their security, erasure guarantees, and performance.\nThe experimental setup consists of 3 modern IoT devices with different\ncomputational capabilities, 7 protocols, 6 hash-function implementations, and\nvarious performance and security criteria. Our results indicate that existing\nsoftware-based memory-erasure protocols are feasible, although slow devices may\ntake several seconds to erase their memory and generate a proof of erasure. We\nfound that no protocol dominates across all empirical settings, defined by the\ncomputational power and memory size of the device, the network speed, and the\nrequired level of security. Interestingly, network speed and hidden constants\nwithin the protocol specification played a more prominent role in the\nperformance of these protocols than anticipated based on the related\nliterature. We provide an evaluation framework that, given a desired level of\nsecurity, determines which protocols offer the best trade-off between\nperformance and erasure guarantees."}
{"id": "2509.10252", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.10252", "abs": "https://arxiv.org/abs/2509.10252", "authors": ["Yifan Jia", "Ye Tian", "Yanbin Wang", "Jianguo Sun", "Haitao Xu"], "title": "ExDoS: Expert-Guided Dual-Focus Cross-Modal Distillation for Smart Contract Vulnerability Detection", "comment": "This work has been submitted to the IEEE for possible publication", "summary": "The success of smart contracts has made them a target for attacks, but their\nclosed-source nature often forces vulnerability detection to work on bytecode,\nwhich is inherently more challenging than source-code-based analysis. While\nrecent studies try to align source and bytecode embeddings during training to\ntransfer knowledge, current methods rely on graph-level alignment that obscures\nfine-grained structural and semantic correlations between the two modalities.\nMoreover, the absence of precise vulnerability patterns and granular\nannotations in bytecode leads to depriving the model of crucial supervisory\nsignals for learning discriminant features. We propose ExDoS to transfer rich\nsemantic knowledge from source code to bytecode, effectively supplementing the\nsource code prior in practical settings. Specifically, we construct semantic\ngraphs from source code and control-flow graphs from bytecode. To address\nobscured local signals in graph-level contract embeddings, we propose a\nDual-Attention Graph Network introducing a novel node attention aggregation\nmodule to enhance local pattern capture in graph embeddings. Furthermore, by\nsummarizing existing source code vulnerability patterns and designing a\ncorresponding set of bytecode-level patterns for each, we construct the first\ndataset of vulnerability pattern annotations aligned with source code\ndefinitions to facilitate fine-grained cross-modal alignment and the capture of\nfunction-level vulnerability signals. Finally, we propose a dual-focus\nobjective for our cross-modal distillation framework, comprising: a Global\nSemantic Distillation Loss for transferring graph-level knowledge and a Local\nSemantic Distillation Loss enabling expert-guided, fine-grained\nvulnerability-specific distillation. Experiments on real-world contracts\ndemonstrate that our method achieves consistent F1-score improvements\n(3\\%--6\\%) over strong baselines."}
{"id": "2509.10287", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.10287", "abs": "https://arxiv.org/abs/2509.10287", "authors": ["Ye Tian", "Yifan Jia", "Yanbin Wang", "Jianguo Sun", "Zhiquan Liu", "Xiaowen Ling"], "title": "URL2Graph++: Unified Semantic-Structural-Character Learning for Malicious URL Detection", "comment": null, "summary": "Malicious URL detection remains a major challenge in cybersecurity, primarily\ndue to two factors: (1) the exponential growth of the Internet has led to an\nimmense diversity of URLs, making generalized detection increasingly difficult;\nand (2) attackers are increasingly employing sophisticated obfuscation\ntechniques to evade detection. We advocate that addressing these challenges\nfundamentally requires: (1) obtaining semantic understanding to improve\ngeneralization across vast and diverse URL sets, and (2) accurately modeling\ncontextual relationships within the structural composition of URLs. In this\npaper, we propose a novel malicious URL detection method combining\nmulti-granularity graph learning with semantic embedding to jointly capture\nsemantic, character-level, and structural features for robust URL analysis. To\nmodel internal dependencies within URLs, we first construct dual-granularity\nURL graphs at both subword and character levels, where nodes represent URL\ntokens/characters and edges encode co-occurrence relationships. To obtain\nfine-grained embeddings, we initialize node representations using a\ncharacter-level convolutional network. The two graphs are then processed\nthrough jointly trained Graph Convolutional Networks to learn consistent\ngraph-level representations, enabling the model to capture complementary\nstructural features that reflect co-occurrence patterns and character-level\ndependencies. Furthermore, we employ BERT to derive semantic representations of\nURLs for semantically aware understanding. Finally, we introduce a gated\ndynamic fusion network to combine the semantically enriched BERT\nrepresentations with the jointly optimized graph vectors, further enhancing\ndetection performance. We extensively evaluate our method across multiple\nchallenging dimensions. Results show our method exceeds SOTA performance,\nincluding against large language models."}
{"id": "2509.10313", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2509.10313", "abs": "https://arxiv.org/abs/2509.10313", "authors": ["Hamish Alsop", "Leandros Maglaras", "Helge Janicke", "Iqbal H. Sarker", "Mohamed Amine Ferrag"], "title": "Innovating Augmented Reality Security: Recent E2E Encryption Approaches", "comment": null, "summary": "End-to-end encryption (E2EE) has emerged as a fundamental element of modern\ndigital communication, protecting data from unauthorized access during\ntransmission. By design, E2EE ensures that only the intended recipient can\ndecrypt the information, making it inaccessible even to service providers. Yet,\nthis powerful safeguard of individual privacy and digital trust also introduces\na paradox: it can simultaneously prevent law enforcement efforts by hiding\npotential malicious activities. This paper examines the dual role of E2EE, its\ncritical importance to privacy, the challenges it"}
{"id": "2509.10320", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.10320", "abs": "https://arxiv.org/abs/2509.10320", "authors": ["Davide Corradini", "Mariano Ceccato", "Mohammad Ghafari"], "title": "Automated Testing of Broken Authentication Vulnerabilities in Web APIs with AuthREST", "comment": null, "summary": "We present AuthREST, an open-source security testing tool targeting broken\nauthentication, one of the most prevalent API security risks in the wild.\nAuthREST automatically tests web APIs for credential stuffing, password brute\nforcing, and unchecked token authenticity. Empirical results show that AuthREST\nis effective in improving web API security. Notably, it uncovered previously\nunknown authentication vulnerabilitiesin in four public APIs."}
{"id": "2509.10413", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.10413", "abs": "https://arxiv.org/abs/2509.10413", "authors": ["Guojun Tang", "Carylyne Chan", "Ning Nan", "Spencer Yang", "Jiayu Zhou", "Henry Leung", "Mohammad Mamun", "Steve Drew"], "title": "Bitcoin Cross-Chain Bridge: A Taxonomy and Its Promise in Artificial Intelligence of Things", "comment": "Blockchain Cross-Chain Bridge Survey", "summary": "Bitcoin's limited scripting capabilities and lack of native interoperability\nmechanisms have constrained its integration into the broader blockchain\necosystem, especially decentralized finance (DeFi) and multi-chain\napplications. This paper presents a comprehensive taxonomy of Bitcoin\ncross-chain bridge protocols, systematically analyzing their trust assumptions,\nperformance characteristics, and applicability to the Artificial Intelligence\nof Things (AIoT) scenarios. We categorize bridge designs into three main types:\nnaive token swapping, pegged-asset bridges, and arbitrary-message bridges. Each\ncategory is evaluated across key metrics such as trust model, latency, capital\nefficiency, and DeFi composability. Emerging innovations like BitVM and\nrecursive sidechains are highlighted for their potential to enable secure,\nscalable, and programmable Bitcoin interoperability. Furthermore, we explore\npractical use cases of cross-chain bridges in AIoT applications, including\ndecentralized energy trading, healthcare data integration, and supply chain\nautomation. This taxonomy provides a foundational framework for researchers and\npractitioners seeking to design secure and efficient cross-chain\ninfrastructures in AIoT systems."}
