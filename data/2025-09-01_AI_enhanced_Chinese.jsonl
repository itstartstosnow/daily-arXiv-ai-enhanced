{"id": "2508.21219", "categories": ["cs.CR", "cs.ET", "cs.PL"], "pdf": "https://arxiv.org/pdf/2508.21219", "abs": "https://arxiv.org/abs/2508.21219", "authors": ["A H M Nazmus Sakib", "Mahsin Bin Akram", "Joseph Spracklen", "Sahan Kalutarage", "Raveen Wijewickrama", "Igor Bilogrevic", "Murtuza Jadliwala"], "title": "The WASM Cloak: Evaluating Browser Fingerprinting Defenses Under WebAssembly based Obfuscation", "comment": null, "summary": "Browser fingerprinting defenses have historically focused on detecting\nJavaScript(JS)-based tracking techniques. However, the widespread adoption of\nWebAssembly (WASM) introduces a potential blind spot, as adversaries can\nconvert JS to WASM's low-level binary format to obfuscate malicious logic. This\npaper presents the first systematic evaluation of how such WASM-based\nobfuscation impacts the robustness of modern fingerprinting defenses. We\ndevelop an automated pipeline that translates real-world JS fingerprinting\nscripts into functional WASM-obfuscated variants and test them against two\nclasses of defenses: state-of-the-art detectors in research literature and\ncommercial, in-browser tools. Our findings reveal a notable divergence:\ndetectors proposed in the research literature that rely on feature-based\nanalysis of source code show moderate vulnerability, stemming from outdated\ndatasets or a lack of WASM compatibility. In contrast, defenses such as browser\nextensions and native browser features remained completely effective, as their\nAPI-level interception is agnostic to the script's underlying implementation.\nThese results highlight a gap between academic and practical defense strategies\nand offer insights into strengthening detection approaches against WASM-based\nobfuscation, while also revealing opportunities for more evasive techniques in\nfuture attacks.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u7cfb\u7edf\u8bc4\u4f30\u4e86WebAssembly(WASM)\u6df7\u6dc6\u6280\u672f\u5bf9\u73b0\u4ee3\u6d4f\u89c8\u5668\u6307\u7eb9\u8bc6\u522b\u9632\u5fa1\u7684\u5f71\u54cd\uff0c\u53d1\u73b0\u5b66\u672f\u7814\u7a76\u4e2d\u7684\u68c0\u6d4b\u5668\u5b58\u5728\u4e2d\u7b49\u8106\u5f31\u6027\uff0c\u800c\u5546\u4e1a\u6d4f\u89c8\u5668\u6269\u5c55\u548c\u539f\u751f\u529f\u80fd\u5219\u5b8c\u5168\u6709\u6548\u3002", "motivation": "\u968f\u7740WebAssembly(WASM)\u7684\u5e7f\u6cdb\u91c7\u7528\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5c06JavaScript\u8f6c\u6362\u4e3aWASM\u4e8c\u8fdb\u5236\u683c\u5f0f\u6765\u6df7\u6dc6\u6076\u610f\u903b\u8f91\uff0c\u8fd9\u53ef\u80fd\u6210\u4e3a\u73b0\u6709\u6307\u7eb9\u8bc6\u522b\u9632\u5fa1\u7684\u76f2\u70b9\u3002", "method": "\u5f00\u53d1\u81ea\u52a8\u5316\u6d41\u6c34\u7ebf\uff0c\u5c06\u771f\u5b9e\u4e16\u754c\u7684JS\u6307\u7eb9\u8bc6\u522b\u811a\u672c\u8f6c\u6362\u4e3a\u529f\u80fd\u6027\u7684WASM\u6df7\u6dc6\u53d8\u4f53\uff0c\u5e76\u6d4b\u8bd5\u4e24\u7c7b\u9632\u5fa1\uff1a\u5b66\u672f\u6587\u732e\u4e2d\u7684\u6700\u5148\u8fdb\u68c0\u6d4b\u5668\u548c\u5546\u4e1a\u6d4f\u89c8\u5668\u5de5\u5177\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u5b66\u672f\u68c0\u6d4b\u5668\u56e0\u4f9d\u8d56\u6e90\u4ee3\u7801\u7279\u5f81\u5206\u6790\u800c\u5b58\u5728\u4e2d\u7b49\u8106\u5f31\u6027\uff08\u6570\u636e\u96c6\u8fc7\u65f6\u6216\u7f3a\u4e4fWASM\u517c\u5bb9\u6027\uff09\uff0c\u800c\u6d4f\u89c8\u5668\u6269\u5c55\u548c\u539f\u751f\u529f\u80fd\u901a\u8fc7API\u7ea7\u62e6\u622a\u4fdd\u6301\u5b8c\u5168\u6709\u6548\u3002", "conclusion": "\u7ed3\u679c\u63ed\u793a\u4e86\u5b66\u672f\u9632\u5fa1\u7b56\u7565\u4e0e\u5b9e\u9645\u9632\u5fa1\u7b56\u7565\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u4e3a\u52a0\u5f3a\u9488\u5bf9WASM\u6df7\u6dc6\u7684\u68c0\u6d4b\u65b9\u6cd5\u63d0\u4f9b\u4e86\u89c1\u89e3\uff0c\u540c\u65f6\u4e5f\u63ed\u793a\u4e86\u672a\u6765\u653b\u51fb\u4e2d\u66f4\u9690\u853d\u6280\u672f\u7684\u673a\u9047\u3002"}}
{"id": "2508.21302", "categories": ["cs.CR", "cs.AI", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.21302", "abs": "https://arxiv.org/abs/2508.21302", "authors": ["Jie Zhu", "Chihao Shen", "Ziyang Li", "Jiahao Yu", "Yizheng Chen", "Kexin Pei"], "title": "Locus: Agentic Predicate Synthesis for Directed Fuzzing", "comment": null, "summary": "Directed fuzzing aims to find program inputs that lead to specified target\nprogram states. It has broad applications, such as debugging system crashes,\nconfirming reported bugs, and generating exploits for potential\nvulnerabilities. This task is inherently challenging because target states are\noften deeply nested in the program, while the search space manifested by\nnumerous possible program inputs is prohibitively large. Existing approaches\nrely on branch distances or manually-specified constraints to guide the search;\nhowever, the branches alone are often insufficient to precisely characterize\nprogress toward reaching the target states, while the manually specified\nconstraints are often tailored for specific bug types and thus difficult to\ngeneralize to diverse target states and programs.\n  We present Locus, a novel framework to improve the efficiency of directed\nfuzzing. Our key insight is to synthesize predicates to capture fuzzing\nprogress as semantically meaningful intermediate states, serving as milestones\ntowards reaching the target states. When used to instrument the program under\nfuzzing, they can reject executions unlikely to reach the target states, while\nproviding additional coverage guidance. To automate this task and generalize to\ndiverse programs, Locus features an agentic framework with program analysis\ntools to synthesize and iteratively refine the candidate predicates, while\nensuring the predicates strictly relax the target states to prevent false\nrejections via symbolic execution. Our evaluation shows that Locus\nsubstantially improves the efficiency of eight state-of-the-art fuzzers in\ndiscovering real-world vulnerabilities, achieving an average speedup of 41.6x.\nSo far, Locus has found eight previously unpatched bugs, with one already\nacknowledged with a draft patch.", "AI": {"tldr": "Locus\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u5b9a\u5411\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u5408\u6210\u8c13\u8bcd\u6765\u6355\u83b7\u8bed\u4e49\u4e0a\u6709\u610f\u4e49\u7684\u4e2d\u95f4\u72b6\u6001\u4f5c\u4e3a\u91cc\u7a0b\u7891\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u5b9a\u5411\u6a21\u7cca\u6d4b\u8bd5\u7684\u6548\u7387\uff0c\u5e73\u5747\u52a0\u901f41.6\u500d\u3002", "motivation": "\u5b9a\u5411\u6a21\u7cca\u6d4b\u8bd5\u5728\u8c03\u8bd5\u7cfb\u7edf\u5d29\u6e83\u3001\u786e\u8ba4\u62a5\u544a\u6f0f\u6d1e\u548c\u751f\u6210\u6f0f\u6d1e\u5229\u7528\u65b9\u9762\u6709\u5e7f\u6cdb\u5e94\u7528\uff0c\u4f46\u7531\u4e8e\u76ee\u6807\u72b6\u6001\u901a\u5e38\u6df1\u57cb\u5728\u7a0b\u5e8f\u4e2d\u4e14\u641c\u7d22\u7a7a\u95f4\u5de8\u5927\uff0c\u73b0\u6709\u65b9\u6cd5\u4f9d\u8d56\u5206\u652f\u8ddd\u79bb\u6216\u624b\u52a8\u6307\u5b9a\u7ea6\u675f\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u8981\u4e48\u4e0d\u591f\u7cbe\u786e\uff0c\u8981\u4e48\u96be\u4ee5\u6cdb\u5316\u5230\u4e0d\u540c\u7684\u76ee\u6807\u72b6\u6001\u548c\u7a0b\u5e8f\u3002", "method": "Locus\u91c7\u7528\u4ee3\u7406\u6846\u67b6\u548c\u7a0b\u5e8f\u5206\u6790\u5de5\u5177\u6765\u81ea\u52a8\u5408\u6210\u548c\u8fed\u4ee3\u7cbe\u5316\u5019\u9009\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u4f5c\u4e3a\u91cc\u7a0b\u7891\u6355\u83b7\u6a21\u7cca\u6d4b\u8bd5\u8fdb\u5ea6\uff0c\u901a\u8fc7\u7b26\u53f7\u6267\u884c\u786e\u4fdd\u8c13\u8bcd\u4e25\u683c\u677e\u5f1b\u76ee\u6807\u72b6\u6001\u4ee5\u9632\u6b62\u9519\u8bef\u62d2\u7edd\u3002", "result": "\u8bc4\u4f30\u663e\u793aLocus\u663e\u8457\u63d0\u9ad8\u4e86\u516b\u79cd\u6700\u5148\u8fdb\u6a21\u7cca\u6d4b\u8bd5\u5668\u53d1\u73b0\u771f\u5b9e\u4e16\u754c\u6f0f\u6d1e\u7684\u6548\u7387\uff0c\u5e73\u5747\u52a0\u901f41.6\u500d\uff0c\u5e76\u53d1\u73b0\u4e86\u516b\u4e2a\u5148\u524d\u672a\u4fee\u8865\u7684\u6f0f\u6d1e\u3002", "conclusion": "Locus\u901a\u8fc7\u5408\u6210\u8bed\u4e49\u4e0a\u6709\u610f\u4e49\u7684\u4e2d\u95f4\u72b6\u6001\u8c13\u8bcd\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u5b9a\u5411\u6a21\u7cca\u6d4b\u8bd5\u4e2d\u7684\u6311\u6218\uff0c\u4e3a\u81ea\u52a8\u5316\u6f0f\u6d1e\u53d1\u73b0\u63d0\u4f9b\u4e86\u9ad8\u6548\u4e14\u53ef\u6cdb\u5316\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.21323", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21323", "abs": "https://arxiv.org/abs/2508.21323", "authors": ["Kunal Mukherjee", "Murat Kantarcioglu"], "title": "LLM-driven Provenance Forensics for Threat Investigation and Detection", "comment": null, "summary": "We introduce PROVSEEK, an LLM-powered agentic framework for automated\nprovenance-driven forensic analysis and threat intelligence extraction.\nPROVSEEK employs specialized toolchains to dynamically retrieve relevant\ncontext by generating precise, context-aware queries that fuse a vectorized\nthreat report knowledge base with data from system provenance databases. The\nframework resolves provenance queries, orchestrates multiple role-specific\nagents to mitigate hallucinations, and synthesizes structured, ground-truth\nverifiable forensic summaries. By combining agent orchestration with\nRetrieval-Augmented Generation (RAG) and chain-of-thought (CoT) reasoning,\nPROVSEEK enables adaptive multi-step analysis that iteratively refines\nhypotheses, verifies supporting evidence, and produces scalable, interpretable\nforensic explanations of attack behaviors. By combining provenance data with\nagentic reasoning, PROVSEEK establishes a new paradigm for grounded agentic\nforecics to investigate APTs. We conduct a comprehensive evaluation on publicly\navailable DARPA datasets, demonstrating that PROVSEEK outperforms\nretrieval-based methods for intelligence extraction task, achieving a 34%\nimprovement in contextual precision/recall; and for threat detection task,\nPROVSEEK achieves 22%/29% higher precision/recall compared to both a baseline\nagentic AI approach and State-Of-The-Art (SOTA) Provenance-based Intrusion\nDetection System (PIDS).", "AI": {"tldr": "PROVSEEK\u662f\u4e00\u4e2a\u57fa\u4e8eLLM\u7684\u667a\u80fd\u4ee3\u7406\u6846\u67b6\uff0c\u901a\u8fc7\u7ed3\u5408\u6eaf\u6e90\u6570\u636e\u3001RAG\u548c\u601d\u7ef4\u94fe\u63a8\u7406\uff0c\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u53d6\u8bc1\u5206\u6790\u548c\u5a01\u80c1\u60c5\u62a5\u63d0\u53d6\uff0c\u5728DARPA\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u51fa\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u7684\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u7684\u53d6\u8bc1\u5206\u6790\u548c\u5a01\u80c1\u68c0\u6d4b\u65b9\u6cd5\u5728\u5904\u7406\u590d\u6742APT\u653b\u51fb\u65f6\u5b58\u5728\u5c40\u9650\u6027\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u52a8\u6001\u68c0\u7d22\u76f8\u5173\u4e0a\u4e0b\u6587\u3001\u9a8c\u8bc1\u8bc1\u636e\u771f\u5b9e\u6027\u5e76\u751f\u6210\u53ef\u89e3\u91ca\u5206\u6790\u7ed3\u679c\u7684\u65b0\u8303\u5f0f\u3002", "method": "\u91c7\u7528\u591a\u89d2\u8272\u4ee3\u7406\u7f16\u6392\u673a\u5236\uff0c\u7ed3\u5408\u68c0\u7d22\u589e\u5f3a\u751f\u6210(RAG)\u548c\u601d\u7ef4\u94fe(CoT)\u63a8\u7406\uff0c\u901a\u8fc7\u52a8\u6001\u751f\u6210\u7cbe\u786e\u67e5\u8be2\u6765\u878d\u5408\u5411\u91cf\u5316\u5a01\u80c1\u62a5\u544a\u77e5\u8bc6\u5e93\u548c\u7cfb\u7edf\u6eaf\u6e90\u6570\u636e\u5e93\uff0c\u5b9e\u73b0\u81ea\u9002\u5e94\u591a\u6b65\u5206\u6790\u3002", "result": "\u5728DARPA\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30\u663e\u793a\uff1a\u5728\u60c5\u62a5\u63d0\u53d6\u4efb\u52a1\u4e2d\u6bd4\u68c0\u7d22\u65b9\u6cd5\u63d0\u534734%\u7684\u4e0a\u4e0b\u6587\u7cbe\u786e\u7387/\u53ec\u56de\u7387\uff1b\u5728\u5a01\u80c1\u68c0\u6d4b\u4efb\u52a1\u4e2d\u6bd4\u57fa\u7ebf\u4ee3\u7406AI\u65b9\u6cd5\u548cSOTA\u6eaf\u6e90\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u5206\u522b\u63d0\u534722%/29%\u7684\u7cbe\u786e\u7387/\u53ec\u56de\u7387\u3002", "conclusion": "PROVSEEK\u901a\u8fc7\u5c06\u6eaf\u6e90\u6570\u636e\u4e0e\u667a\u80fd\u4ee3\u7406\u63a8\u7406\u76f8\u7ed3\u5408\uff0c\u4e3a\u57fa\u4e8e\u4e8b\u5b9e\u7684\u667a\u80fd\u53d6\u8bc1\u5efa\u7acb\u4e86\u65b0\u8303\u5f0f\uff0c\u80fd\u591f\u6709\u6548\u8c03\u67e5APT\u653b\u51fb\u5e76\u63d0\u4f9b\u53ef\u6269\u5c55\u3001\u53ef\u89e3\u91ca\u7684\u53d6\u8bc1\u5206\u6790\u3002"}}
{"id": "2508.21386", "categories": ["cs.CR", "cs.CY", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.21386", "abs": "https://arxiv.org/abs/2508.21386", "authors": ["Jukka Ruohonen", "Jesper L\u00f8ffler Nielsen", "Jakub Sk\u00f3rczynski"], "title": "Risks and Compliance with the EU's Core Cyber Security Legislation", "comment": "Submitted to IST (VSI:RegCompliance in SE)", "summary": "The European Union (EU) has long favored a risk-based approach to regulation.\nSuch an approach is also used in recent cyber security legislation enacted in\nthe EU. Risks are also inherently related to compliance with the new\nlegislation. Objective: The paper investigates how risks are framed in the EU's\nfive core cyber security legislative acts, whether the framings indicate\nconvergence or divergence between the acts and their risk concepts, and what\nqualifying words and terms are used when describing the legal notions of risks.\nMethod : The paper's methodology is based on qualitative legal interpretation\nand taxonomy-building. Results: The five acts have an encompassing coverage of\ndifferent cyber security risks, including but not limited to risks related to\ntechnical, organizational, and human security as well as those not originating\nfrom man-made actions. Both technical aspects and assets are used to frame the\nlegal risk notions in many of the legislative acts. A threat-centric viewpoint\nis also present in one of the acts. Notable gaps are related to acceptable\nrisks, non-probabilistic risks, and residual risks. Conclusion: The EU's new\ncyber security legislation has significantly extended the risk-based approach\nto regulations. At the same time, complexity and compliance burden have\nincreased. With this point in mind, the paper concludes with a few practical\ntakeaways about means to deal with compliance and research it.", "AI": {"tldr": "\u6b27\u76df\u7f51\u7edc\u5b89\u5168\u7acb\u6cd5\u91c7\u7528\u98ce\u9669\u5bfc\u5411\u65b9\u6cd5\uff0c\u6db5\u76d6\u6280\u672f\u3001\u7ec4\u7ec7\u3001\u4eba\u4e3a\u7b49\u591a\u7ef4\u5ea6\u98ce\u9669\uff0c\u4f46\u5b58\u5728\u53ef\u63a5\u53d7\u98ce\u9669\u3001\u975e\u6982\u7387\u98ce\u9669\u548c\u6b8b\u4f59\u98ce\u9669\u7b49\u6982\u5ff5\u7a7a\u767d\uff0c\u589e\u52a0\u4e86\u76d1\u7ba1\u590d\u6742\u6027\u548c\u5408\u89c4\u8d1f\u62c5\u3002", "motivation": "\u7814\u7a76\u6b27\u76df\u4e94\u9879\u6838\u5fc3\u7f51\u7edc\u5b89\u5168\u7acb\u6cd5\u4e2d\u98ce\u9669\u6982\u5ff5\u7684\u6846\u67b6\u65b9\u5f0f\uff0c\u5206\u6790\u7acb\u6cd5\u95f4\u7684\u8d8b\u540c\u4e0e\u5206\u6b67\uff0c\u4ee5\u53ca\u6cd5\u5f8b\u98ce\u9669\u63cf\u8ff0\u4e2d\u4f7f\u7528\u7684\u9650\u5b9a\u8bcd\u548c\u672f\u8bed\u3002", "method": "\u57fa\u4e8e\u5b9a\u6027\u6cd5\u5f8b\u89e3\u91ca\u548c\u5206\u7c7b\u6784\u5efa\u7684\u65b9\u6cd5\u8bba\uff0c\u5bf9\u6b27\u76df\u4e94\u9879\u6838\u5fc3\u7f51\u7edc\u5b89\u5168\u7acb\u6cd5\u6587\u4ef6\u8fdb\u884c\u7cfb\u7edf\u5206\u6790\u3002", "result": "\u4e94\u9879\u7acb\u6cd5\u5168\u9762\u8986\u76d6\u4e0d\u540c\u7c7b\u578b\u7f51\u7edc\u5b89\u5168\u98ce\u9669\uff0c\u5305\u62ec\u6280\u672f\u3001\u7ec4\u7ec7\u3001\u4eba\u4e3a\u5b89\u5168\u7b49\u98ce\u9669\uff1b\u4f7f\u7528\u6280\u672f\u65b9\u9762\u548c\u8d44\u4ea7\u6765\u6784\u5efa\u6cd5\u5f8b\u98ce\u9669\u6982\u5ff5\uff1b\u5b58\u5728\u5a01\u80c1\u4e2d\u5fc3\u89c6\u89d2\uff1b\u4f46\u5728\u53ef\u63a5\u53d7\u98ce\u9669\u3001\u975e\u6982\u7387\u98ce\u9669\u548c\u6b8b\u4f59\u98ce\u9669\u65b9\u9762\u5b58\u5728\u663e\u8457\u7a7a\u767d\u3002", "conclusion": "\u6b27\u76df\u65b0\u7f51\u7edc\u5b89\u5168\u7acb\u6cd5\u663e\u8457\u6269\u5c55\u4e86\u98ce\u9669\u5bfc\u5411\u76d1\u7ba1\u65b9\u6cd5\uff0c\u4f46\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u590d\u6742\u6027\u548c\u5408\u89c4\u8d1f\u62c5\uff0c\u8bba\u6587\u6700\u540e\u63d0\u51fa\u4e86\u5904\u7406\u5408\u89c4\u95ee\u9898\u548c\u5f00\u5c55\u76f8\u5173\u7814\u7a76\u7684\u5b9e\u8df5\u5efa\u8bae\u3002"}}
{"id": "2508.21393", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.21393", "abs": "https://arxiv.org/abs/2508.21393", "authors": ["Guofu Liao", "Taotao Wang", "Shengli Zhang", "Jiqun Zhang", "Shi Long", "Dacheng Tao"], "title": "zkLoRA: Fine-Tuning Large Language Models with Verifiable Security via Zero-Knowledge Proofs", "comment": null, "summary": "Fine-tuning large language models (LLMs) is crucial for adapting them to\nspecific tasks, yet it remains computationally demanding and raises concerns\nabout correctness and privacy, particularly in untrusted environments. Although\nparameter-efficient methods like Low-Rank Adaptation (LoRA) significantly\nreduce resource requirements, ensuring the security and verifiability of\nfine-tuning under zero-knowledge constraints remains an unresolved challenge.\nTo address this, we introduce zkLoRA, the first framework to integrate LoRA\nfine-tuning with zero-knowledge proofs (ZKPs), achieving provable security and\ncorrectness. zkLoRA employs advanced cryptographic techniques -- such as lookup\narguments, sumcheck protocols, and polynomial commitments -- to verify both\narithmetic and non-arithmetic operations in Transformer-based architectures.\nThe framework provides end-to-end verifiability for forward propagation,\nbackward propagation, and parameter updates during LoRA fine-tuning, while\nsafeguarding the privacy of model parameters and training data. Leveraging\nGPU-based implementations, zkLoRA demonstrates practicality and efficiency\nthrough experimental validation on open-source LLMs like LLaMA, scaling up to\n13 billion parameters. By combining parameter-efficient fine-tuning with ZKPs,\nzkLoRA bridges a critical gap, enabling secure and trustworthy deployment of\nLLMs in sensitive or untrusted environments.", "AI": {"tldr": "zkLoRA\u662f\u9996\u4e2a\u5c06LoRA\u5fae\u8c03\u4e0e\u96f6\u77e5\u8bc6\u8bc1\u660e\u7ed3\u5408\u7684\u5b89\u5168\u6846\u67b6\uff0c\u901a\u8fc7\u5bc6\u7801\u5b66\u6280\u672f\u9a8c\u8bc1Transformer\u67b6\u6784\u4e2d\u7684\u7b97\u672f\u548c\u975e\u7b97\u672f\u64cd\u4f5c\uff0c\u5b9e\u73b0\u7aef\u5230\u7aef\u7684\u53ef\u9a8c\u8bc1\u6027\uff0c\u4fdd\u62a4\u6a21\u578b\u53c2\u6570\u548c\u8bad\u7ec3\u6570\u636e\u7684\u9690\u79c1\u3002", "motivation": "\u5f53\u524dLLM\u5fae\u8c03\u5728\u4e0d\u53ef\u4fe1\u73af\u5883\u4e2d\u5b58\u5728\u8ba1\u7b97\u8d44\u6e90\u9700\u6c42\u9ad8\u3001\u5b89\u5168\u6027\u548c\u6b63\u786e\u6027\u9a8c\u8bc1\u56f0\u96be\u7684\u95ee\u9898\uff0c\u9700\u8981\u4e00\u79cd\u65e2\u80fd\u4fdd\u6301\u53c2\u6570\u6548\u7387\u53c8\u80fd\u63d0\u4f9b\u5b89\u5168\u9a8c\u8bc1\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u7ed3\u5408LoRA\u53c2\u6570\u9ad8\u6548\u5fae\u8c03\u65b9\u6cd5\u548c\u96f6\u77e5\u8bc6\u8bc1\u660e\u6280\u672f\uff0c\u4f7f\u7528\u67e5\u627e\u53c2\u6570\u3001\u548c\u6821\u9a8c\u534f\u8bae\u3001\u591a\u9879\u5f0f\u627f\u8bfa\u7b49\u5bc6\u7801\u5b66\u5de5\u5177\u6765\u9a8c\u8bc1\u524d\u5411\u4f20\u64ad\u3001\u53cd\u5411\u4f20\u64ad\u548c\u53c2\u6570\u66f4\u65b0\u8fc7\u7a0b\u3002", "result": "\u5728LLaMA\u7b49\u5f00\u6e90LLM\u4e0a\u8fdb\u884c\u4e86\u5b9e\u9a8c\u9a8c\u8bc1\uff0c\u6210\u529f\u6269\u5c55\u5230130\u4ebf\u53c2\u6570\u89c4\u6a21\uff0c\u8bc1\u660e\u4e86\u6846\u67b6\u7684\u5b9e\u7528\u6027\u548c\u6548\u7387\u3002", "conclusion": "zkLoRA\u586b\u8865\u4e86\u53c2\u6570\u9ad8\u6548\u5fae\u8c03\u4e0e\u5b89\u5168\u9a8c\u8bc1\u4e4b\u95f4\u7684\u5173\u952e\u7a7a\u767d\uff0c\u4e3a\u5728\u654f\u611f\u6216\u4e0d\u53ef\u4fe1\u73af\u5883\u4e2d\u5b89\u5168\u53ef\u4fe1\u5730\u90e8\u7f72LLM\u63d0\u4f9b\u4e86\u53ef\u884c\u65b9\u6848\u3002"}}
{"id": "2508.21417", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.21417", "abs": "https://arxiv.org/abs/2508.21417", "authors": ["Shuhan Liu", "Xing Hu", "Xin Xia", "David Lo", "Xiaohu Yang"], "title": "An Empirical Study of Vulnerable Package Dependencies in LLM Repositories", "comment": null, "summary": "Large language models (LLMs) have developed rapidly in recent years,\nrevolutionizing various fields. Despite their widespread success, LLMs heavily\nrely on external code dependencies from package management systems, creating a\ncomplex and interconnected LLM dependency supply chain. Vulnerabilities in\ndependencies can expose LLMs to security risks. While existing research\npredominantly focuses on model-level security threats, vulnerabilities within\nthe LLM dependency supply chain have been overlooked. To fill this gap, we\nconducted an empirical analysis of 52 open-source LLMs, examining their\nthird-party dependencies and associated vulnerabilities. We then explored\nactivities within the LLM repositories to understand how maintainers manage\nthird-party vulnerabilities in practice. Finally, we compared third-party\ndependency vulnerabilities in the LLM ecosystem to those in the Python\necosystem. Our results show that half of the vulnerabilities in the LLM\necosystem remain undisclosed for more than 56.2 months, significantly longer\nthan those in the Python ecosystem. Additionally, 75.8% of LLMs include\nvulnerable dependencies in their configuration files. This study advances the\nunderstanding of LLM supply chain risks, provides insights for practitioners,\nand highlights potential directions for improving the security of the LLM\nsupply chain.", "AI": {"tldr": "\u5bf952\u4e2a\u5f00\u6e90\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u4f9d\u8d56\u4f9b\u5e94\u94fe\u5b89\u5168\u8fdb\u884c\u5b9e\u8bc1\u5206\u6790\uff0c\u53d1\u73b0LLM\u751f\u6001\u7cfb\u7edf\u4e2d\u6f0f\u6d1e\u62ab\u9732\u65f6\u95f4\u663e\u8457\u957f\u4e8ePython\u751f\u6001\u7cfb\u7edf\uff0c\u4e14\u591a\u6570LLM\u5305\u542b\u6613\u53d7\u653b\u51fb\u7684\u4f9d\u8d56\u9879\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u6a21\u578b\u7ea7\u5b89\u5168\u5a01\u80c1\uff0c\u800cLLM\u4f9d\u8d56\u4f9b\u5e94\u94fe\u4e2d\u7684\u6f0f\u6d1e\u88ab\u5ffd\u89c6\u3002LLM\u4e25\u91cd\u4f9d\u8d56\u5305\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u5916\u90e8\u4ee3\u7801\u4f9d\u8d56\uff0c\u5f62\u6210\u590d\u6742\u7684\u4f9d\u8d56\u4f9b\u5e94\u94fe\uff0c\u5176\u4e2d\u7684\u6f0f\u6d1e\u4f1a\u4f7fLLM\u9762\u4e34\u5b89\u5168\u98ce\u9669\u3002", "method": "\u5bf952\u4e2a\u5f00\u6e90LLM\u8fdb\u884c\u5b9e\u8bc1\u5206\u6790\uff0c\u68c0\u67e5\u5176\u7b2c\u4e09\u65b9\u4f9d\u8d56\u53ca\u76f8\u5173\u6f0f\u6d1e\uff1b\u7814\u7a76LLM\u4ed3\u5e93\u4e2d\u7684\u6d3b\u52a8\u4ee5\u4e86\u89e3\u7ef4\u62a4\u8005\u5982\u4f55\u7ba1\u7406\u7b2c\u4e09\u65b9\u6f0f\u6d1e\uff1b\u5c06LLM\u751f\u6001\u7cfb\u7edf\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u6f0f\u6d1e\u4e0ePython\u751f\u6001\u7cfb\u7edf\u8fdb\u884c\u6bd4\u8f83\u3002", "result": "LLM\u751f\u6001\u7cfb\u7edf\u4e2d\u4e00\u534a\u7684\u6f0f\u6d1e\u672a\u62ab\u9732\u65f6\u95f4\u8d85\u8fc756.2\u4e2a\u6708\uff0c\u663e\u8457\u957f\u4e8ePython\u751f\u6001\u7cfb\u7edf\uff1b75.8%\u7684LLM\u5728\u5176\u914d\u7f6e\u6587\u4ef6\u4e2d\u5305\u542b\u6613\u53d7\u653b\u51fb\u7684\u4f9d\u8d56\u9879\u3002", "conclusion": "\u8be5\u7814\u7a76\u589e\u8fdb\u4e86\u5bf9LLM\u4f9b\u5e94\u94fe\u98ce\u9669\u7684\u7406\u89e3\uff0c\u4e3a\u4ece\u4e1a\u8005\u63d0\u4f9b\u4e86\u89c1\u89e3\uff0c\u5e76\u6307\u51fa\u4e86\u6539\u8fdbLLM\u4f9b\u5e94\u94fe\u5b89\u5168\u7684\u6f5c\u5728\u65b9\u5411\u3002"}}
{"id": "2508.21432", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.21432", "abs": "https://arxiv.org/abs/2508.21432", "authors": ["Wenjie Qu", "Yuguang Zhou", "Bo Wang", "Wengrui Zheng", "Yuexin Li", "Jinyuan Jia", "Jiaheng Zhang"], "title": "RepoMark: A Code Usage Auditing Framework for Code Large Language Models", "comment": null, "summary": "The rapid development of Large Language Models (LLMs) for code generation has\ntransformed software development by automating coding tasks with unprecedented\nefficiency.\n  However, the training of these models on open-source code repositories (e.g.,\nfrom GitHub) raises critical ethical and legal concerns, particularly regarding\ndata authorization and open-source license compliance. Developers are\nincreasingly questioning whether model trainers have obtained proper\nauthorization before using repositories for training, especially given the lack\nof transparency in data collection.\n  To address these concerns, we propose a novel data marking framework RepoMark\nto audit the data usage of code LLMs. Our method enables repository owners to\nverify whether their code has been used in training, while ensuring semantic\npreservation, imperceptibility, and theoretical false detection rate (FDR)\nguarantees. By generating multiple semantically equivalent code variants,\nRepoMark introduces data marks into the code files, and during detection,\nRepoMark leverages a novel ranking-based hypothesis test to detect memorization\nwithin the model. Compared to prior data auditing approaches, RepoMark\nsignificantly enhances sample efficiency, allowing effective auditing even when\nthe user's repository possesses only a small number of code files.\n  Experiments demonstrate that RepoMark achieves a detection success rate over\n90\\% on small code repositories under a strict FDR guarantee of 5\\%. This\nrepresents a significant advancement over existing data marking techniques, all\nof which only achieve accuracy below 55\\% under identical settings. This\nfurther validates RepoMark as a robust, theoretically sound, and promising\nsolution for enhancing transparency in code LLM training, which can safeguard\nthe rights of repository owners.", "AI": {"tldr": "\u63d0\u51faRepoMark\u6570\u636e\u6807\u8bb0\u6846\u67b6\uff0c\u7528\u4e8e\u5ba1\u8ba1\u4ee3\u7801\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6570\u636e\u4f7f\u7528\u60c5\u51b5\uff0c\u89e3\u51b3\u8bad\u7ec3\u6570\u636e\u6388\u6743\u95ee\u9898", "motivation": "\u4ee3\u7801LLM\u8bad\u7ec3\u4f7f\u7528\u5f00\u6e90\u4ee3\u7801\u5e93\u5f15\u53d1\u4e86\u9053\u5fb7\u548c\u6cd5\u5f8b\u98ce\u9669\uff0c\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u9a8c\u8bc1\u6a21\u578b\u662f\u5426\u4f7f\u7528\u4e86\u7279\u5b9a\u4ee3\u7801\u5e93\u8fdb\u884c\u8bad\u7ec3", "method": "\u901a\u8fc7\u751f\u6210\u591a\u4e2a\u8bed\u4e49\u7b49\u4ef7\u7684\u4ee3\u7801\u53d8\u4f53\uff0c\u5728\u4ee3\u7801\u6587\u4ef6\u4e2d\u63d2\u5165\u6570\u636e\u6807\u8bb0\uff0c\u4f7f\u7528\u6392\u5e8f\u57fa\u4e8e\u5047\u8bbe\u68c0\u9a8c\u68c0\u6d4b\u6a21\u578b\u7684\u8bb0\u5fc6", "result": "\u5b9e\u9a8c\u663e\u793a\u57285%\u5047\u963b\u6ee9\u7387\u4fdd\u8bc1\u4e0b\uff0c\u5c0f\u578b\u4ee3\u7801\u5e93\u7684\u68c0\u6d4b\u6210\u529f\u7387\u8d85\u8fc790%\uff0c\u663e\u8457\u8d85\u8d8a\u73b0\u6709\u6280\u672f\uff08\u7cbe\u5ea6<55%\uff09", "conclusion": "RepoMark\u662f\u4e00\u79cd\u5065\u58ee\u3001\u7406\u8bba\u53ef\u9760\u7684\u6570\u636e\u5ba1\u8ba1\u65b9\u6848\uff0c\u80fd\u591f\u63d0\u9ad8\u4ee3\u7801LLM\u8bad\u7ec3\u7684\u900f\u660e\u5ea6\uff0c\u4fdd\u62a4\u4ee3\u7801\u5e93\u6240\u6709\u8005\u6743\u76ca"}}
{"id": "2508.21440", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21440", "abs": "https://arxiv.org/abs/2508.21440", "authors": ["Shan Wang", "Ming Yang", "Yu Liu", "Yue Zhang", "Shuaiqing Zhang", "Zhen Ling", "Jiannong Cao", "Xinwen Fu"], "title": "Time Tells All: Deanonymization of Blockchain RPC Users with Zero Transaction Fee (Extended Version)", "comment": null, "summary": "Remote Procedure Call (RPC) services have become a primary gateway for users\nto access public blockchains. While they offer significant convenience, RPC\nservices also introduce critical privacy challenges that remain insufficiently\nexamined. Existing deanonymization attacks either do not apply to blockchain\nRPC users or incur costs like transaction fees assuming an active network\neavesdropper. In this paper, we propose a novel deanonymization attack that can\nlink an IP address of a RPC user to this user's blockchain pseudonym. Our\nanalysis reveals a temporal correlation between the timestamps of transaction\nconfirmations recorded on the public ledger and those of TCP packets sent by\nthe victim when querying transaction status. We assume a strong passive\nadversary with access to network infrastructure, capable of monitoring traffic\nat network border routers or Internet exchange points. By monitoring network\ntraffic and analyzing public ledgers, the attacker can link the IP address of\nthe TCP packet to the pseudonym of the transaction initiator by exploiting the\ntemporal correlation. This deanonymization attack incurs zero transaction fee.\nWe mathematically model and analyze the attack method, perform large-scale\nmeasurements of blockchain ledgers, and conduct real-world attacks to validate\nthe attack. Our attack achieves a high success rate of over 95% against normal\nRPC users on various blockchain networks, including Ethereum, Bitcoin and\nSolana.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u533f\u540d\u653b\u51fb\u65b9\u6cd5\uff0c\u80fd\u591f\u901a\u8fc7\u5206\u6790\u7f51\u7edc\u6d41\u91cf\u548c\u516c\u94fe\u8bb0\u5f55\u7684\u65f6\u95f4\u76f8\u5173\u6027\uff0c\u5c06RPC\u7528\u6237\u7684IP\u5730\u5740\u4e0e\u5176\u533f\u540d\u8d26\u6237\u8fde\u63a5\u8d77\u6765\uff0c\u653b\u51fb\u6210\u529f\u7387\u8fbe95%\u4ee5\u4e0a\u4e14\u4e0d\u9700\u4ea4\u6613\u8d39\u7528\u3002", "motivation": "\u76ee\u524dRPC\u670d\u52a1\u4f5c\u4e3a\u516c\u6709\u533a\u5757\u94fe\u7684\u4e3b\u8981\u8bbf\u95ee\u7aef\u53e3\uff0c\u5b58\u5728\u4e25\u91cd\u7684\u9690\u79c1\u98ce\u9669\uff0c\u800c\u73b0\u6709\u7684\u53bb\u533f\u540d\u5316\u653b\u51fb\u6216\u8005\u4e0d\u9002\u7528\u4e8e\u533a\u5757\u94feRPC\u7528\u6237\uff0c\u6216\u8005\u9700\u8981\u82b1\u8d39\u4ea4\u6613\u8d39\u7528\u3002", "method": "\u901a\u8fc7\u5206\u6790\u516c\u6709\u8d26\u672c\u4e0a\u4ea4\u6613\u786e\u8ba4\u65f6\u95f4\u6233\u4e0e\u53d7\u5bb3\u8005\u67e5\u8be2\u4ea4\u6613\u72b6\u6001\u65f6\u53d1\u9001\u7684TCP\u6570\u636e\u5305\u65f6\u95f4\u6233\u4e4b\u95f4\u7684\u65f6\u95f4\u76f8\u5173\u6027\uff0c\u5728\u7f51\u7edc\u8fb9\u754c\u8def\u7531\u5668\u6216\u4e92\u8054\u7f51\u4ea4\u6362\u70b9\u76d1\u63a7\u7f51\u7edc\u6d41\u91cf\u6765\u5b9e\u73b0\u53bb\u533f\u540d\u5316\u653b\u51fb\u3002", "result": "\u5728\u4ee5\u592a\u574a\u3001\u6bd4\u7279\u5e01\u548cSolana\u7b49\u591a\u4e2a\u533a\u5757\u94fe\u7f51\u7edc\u4e0a\uff0c\u8be5\u653b\u51fb\u5bf9\u666e\u901aRPC\u7528\u6237\u7684\u6210\u529f\u7387\u8fbe\u5230\u4e8695%\u4ee5\u4e0a\uff0c\u4e14\u4e0d\u9700\u8981\u4ed8\u51fa\u4efb\u4f55\u4ea4\u6613\u8d39\u7528\u3002", "conclusion": "\u8fd9\u79cd\u57fa\u4e8e\u65f6\u95f4\u76f8\u5173\u6027\u7684\u53bb\u533f\u540d\u5316\u653b\u51fb\u663e\u793a\u4e86\u533a\u5757\u94feRPC\u670d\u52a1\u5b58\u5728\u4e25\u91cd\u7684\u9690\u79c1\u6f0f\u6d1e\uff0c\u9700\u8981\u91cd\u65b0\u8003\u8651RPC\u670d\u52a1\u7684\u5b89\u5168\u8bbe\u8ba1\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u3002"}}
{"id": "2508.21457", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21457", "abs": "https://arxiv.org/abs/2508.21457", "authors": ["Fengchao Chen", "Tingmin Wu", "Van Nguyen", "Carsten Rudolph"], "title": "SoK: Large Language Model-Generated Textual Phishing Campaigns End-to-End Analysis of Generation, Characteristics, and Detection", "comment": "13 pages, 3 tables, 4 figures", "summary": "Phishing is a pervasive form of social engineering in which attackers\nimpersonate trusted entities to steal information or induce harmful actions.\nText-based phishing dominates for its low cost, scalability, and\nconcealability, advantages recently amplified by large language models (LLMs)\nthat enable ``Phishing-as-a-Service'' attacks at scale within minutes. Despite\nthe growing research into LLM-facilitated phishing attacks, consolidated\nsystematic research on the phishing attack life cycle remains scarce. In this\nwork, we present the first systematization of knowledge (SoK) on LLM-generated\nphishing, offering an end-to-end analysis that spans generation techniques,\nattack features, and mitigation strategies. We introduce\nGeneration-Characterization-Defense (GenCharDef), which systematizes the ways\nin which LLM-generated phishing differs from traditional phishing across\nmethodologies, security perspectives, data dependencies, and evaluation\npractices. This framework highlights unique challenges of LLM-driven phishing,\nproviding a coherent foundation for understanding the evolving threat landscape\nand guiding the design of more resilient defenses.", "AI": {"tldr": "\u9996\u4e2a\u5173\u4e8eLLM\u751f\u6210\u6b3a\u8bc8\u90ae\u4ef6\u7684\u7cfb\u7edf\u5316\u77e5\u8bc6\u7814\u7a76\uff0c\u63d0\u51faGenCharDef\u6846\u67b6\u6765\u5206\u6790\u751f\u6210\u6280\u672f\u3001\u653b\u51fb\u7279\u5f81\u548c\u9632\u5fa1\u7b56\u7565", "motivation": "LLM\u6280\u672f\u4f7f\u5f97\u6b3a\u8bc8\u653b\u51fb\u66f4\u52a0\u4fbf\u6377\u53ef\u6269\u5c55\uff0c\u4f46\u73b0\u6709\u7814\u7a76\u7f3a\u4e4f\u5bf9\u6b3a\u8bc8\u653b\u51fb\u751f\u547d\u5468\u671f\u7684\u7cfb\u7edf\u6027\u6574\u7406", "method": "\u63d0\u51faGeneration-Characterization-Defense (GenCharDef)\u6846\u67b6\uff0c\u4ece\u65b9\u6cd5\u8bba\u3001\u5b89\u5168\u89c6\u89d2\u3001\u6570\u636e\u4f9d\u8d56\u6027\u548c\u8bc4\u4f30\u5b9e\u8df5\u7b49\u591a\u4e2a\u7ef4\u5ea6\u5bf9\u6bd4LLM\u6b3a\u8bc8\u4e0e\u4f20\u7edf\u6b3a\u8bc8\u7684\u5dee\u5f02", "result": "\u5efa\u7acb\u4e86\u4e00\u4e2a\u7cfb\u7edf\u5316\u7684\u5206\u6790\u6846\u67b6\uff0c\u63ed\u793a\u4e86LLM\u9a71\u52a8\u6b3a\u8bc8\u7684\u72ec\u7279\u6311\u6218", "conclusion": "GenCharDef\u6846\u67b6\u4e3a\u7406\u89e3\u6b3a\u8bc8\u653b\u51fb\u6f14\u53d8\u63d0\u4f9b\u4e86\u57fa\u7840\uff0c\u5e76\u6307\u5bfc\u66f4\u52a0\u5f39\u6027\u9632\u5fa1\u7cfb\u7edf\u7684\u8bbe\u8ba1"}}
{"id": "2508.21480", "categories": ["cs.CR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2508.21480", "abs": "https://arxiv.org/abs/2508.21480", "authors": ["Narges Dadkhah", "Khan Reaz", "Gerhard Wunder"], "title": "Towards a Decentralized IoT Onboarding for Smart Homes Using Consortium Blockchain", "comment": null, "summary": "The increasing adoption of smart home devices and IoT-based security systems\npresents significant opportunities to enhance convenience, safety, and risk\nmanagement for homeowners and service providers. However, secure\nonboarding-provisioning credentials and establishing trust with cloud\nplatforms-remains a considerable challenge. Traditional onboarding methods\noften rely on centralized Public Key Infrastructure (PKI) models and\nmanufacturer-controlled keys, which introduce security risks and limit the\nuser's digital sovereignty. These limitations hinder the widespread deployment\nof scalable IoT solutions. This paper presents a novel onboarding framework\nthat builds upon existing network-layer onboarding techniques and extends them\nto the application layer to address these challenges. By integrating consortium\nblockchain technology, we propose a decentralized onboarding mechanism that\nenhances transparency, security, and monitoring for smart home architectures.\nThe architecture supports device registration, key revocation, access control\nmanagement, and risk detection through event-driven alerts across dedicated\nblockchain channels and smart contracts. To evaluate the framework, we formally\nmodel the protocol using the Tamarin Prover under the Dolev-Yao adversary\nmodel. The analysis focuses on authentication, token integrity, key\nconfidentiality, and resilience over public channels. A prototype\nimplementation demonstrates the system's viability in smart home settings, with\nverification completing in 0.34 seconds, highlighting its scalability and\nsuitability for constrained devices and diverse stakeholders. Additionally,\nperformance evaluation shows that the blockchain-based approach effectively\nhandles varying workloads, maintains high throughput and low latency, and\nsupports near real-time IoT data processing.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u8054\u76df\u533a\u5757\u94fe\u7684\u53bb\u4e2d\u5fc3\u5316\u667a\u80fd\u5bb6\u5ead\u8bbe\u5907\u5165\u7f51\u6846\u67b6\uff0c\u89e3\u51b3\u4f20\u7edfPKI\u6a21\u578b\u7684\u5b89\u5168\u98ce\u9669\u548c\u7528\u6237\u4e3b\u6743\u9650\u5236\u95ee\u9898\u3002", "motivation": "\u667a\u80fd\u5bb6\u5ead\u548cIoT\u5b89\u5168\u7cfb\u7edf\u7684\u666e\u53ca\u5e26\u6765\u4e86\u65b9\u4fbf\u6027\u548c\u5b89\u5168\u6027\u63d0\u5347\uff0c\u4f46\u8bbe\u5907\u5165\u7f51\u8fc7\u7a0b\u4e2d\u7684\u51ed\u8bc1\u4f20\u7edf\u548c\u4e91\u5e73\u53f0\u4fe1\u4efb\u5efa\u7acb\u4ecd\u9762\u4e34\u6311\u6218\u3002\u4f20\u7edf\u7684\u4e2d\u5fc3\u5316PKI\u6a21\u578b\u548c\u5236\u9020\u5546\u63a7\u5236\u7684\u5bc6\u94a5\u5bfc\u81f4\u5b89\u5168\u98ce\u9669\u548c\u7528\u6237\u6570\u5b57\u4e3b\u6743\u53d7\u9650\uff0c\u963b\u788d\u4e86IoT\u89e3\u51b3\u65b9\u6848\u7684\u5927\u89c4\u6a21\u90e8\u7f72\u3002", "method": "\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5165\u7f51\u6846\u67b6\uff0c\u5728\u73b0\u6709\u7f51\u7edc\u5c42\u5165\u7f51\u6280\u672f\u57fa\u7840\u4e0a\u6269\u5c55\u5230\u5e94\u7528\u5c42\u3002\u901a\u8fc7\u96c6\u6210\u8054\u76df\u533a\u5757\u94fe\u6280\u672f\uff0c\u5b9e\u73b0\u4e86\u53bb\u4e2d\u5fc3\u5316\u7684\u5165\u7f51\u673a\u5236\uff0c\u652f\u6301\u8bbe\u5907\u6ce8\u518c\u3001\u5bc6\u94a5\u64a4\u9500\u3001\u8bbf\u95ee\u63a7\u5236\u7ba1\u7406\u548c\u901a\u8fc7\u4e8b\u4ef6\u9a71\u52a8\u62a5\u8b66\u8fdb\u884c\u98ce\u9669\u68c0\u6d4b\u3002\u4f7f\u7528Tamarin Prover\u5de5\u5177\u5728Dolev-Yao\u653b\u51fb\u6a21\u578b\u4e0b\u5bf9\u534f\u8bae\u8fdb\u884c\u6b63\u5f0f\u5f62\u5f0f\u5316\u6a21\u578b\u5206\u6790\u3002", "result": "\u539f\u578b\u7cfb\u7edf\u5728\u667a\u80fd\u5bb6\u5ead\u73af\u5883\u4e2d\u8bc1\u660e\u4e86\u5176\u53ef\u884c\u6027\uff0c\u9a8c\u8bc1\u5b8c\u6210\u65f6\u95f4\u4ec50.34\u79d2\uff0c\u663e\u793a\u4e86\u5176\u53ef\u6269\u5c55\u6027\u548c\u9002\u7528\u4e8e\u7ea6\u675f\u8bbe\u5907\u3002\u6027\u80fd\u8bc4\u4f30\u663e\u793a\uff0c\u8be5\u533a\u5757\u94fe\u65b9\u6848\u80fd\u591f\u6709\u6548\u5904\u7406\u4e0d\u540c\u5de5\u4f5c\u8d1f\u8377\uff0c\u4fdd\u6301\u9ad8\u541e\u5410\u91cf\u548c\u4f4e\u5ef6\u8fdf\uff0c\u652f\u6301\u8fd1\u5b9e\u65f6\u7684IoT\u6570\u636e\u5904\u7406\u3002\u5f62\u5f0f\u5316\u5206\u6790\u786e\u8ba4\u4e86\u8ba4\u8bc1\u3001\u4ee4\u724c\u5b8c\u6574\u6027\u3001\u5bc6\u94a5\u4fdd\u5bc6\u6027\u548c\u516c\u5171\u901a\u9053\u4e0a\u7684\u5f39\u6027\u80fd\u529b\u3002", "conclusion": "\u8be5\u7814\u7a76\u6210\u529f\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u8054\u76df\u533a\u5757\u94fe\u7684\u53bb\u4e2d\u5fc3\u5316\u5165\u7f51\u6846\u67b6\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u667a\u80fd\u5bb6\u5ead\u8bbe\u5907\u5165\u7f51\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u548c\u4fe1\u4efb\u6311\u6218\u3002\u8be5\u65b9\u6848\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u900f\u660e\u6027\u3001\u5b89\u5168\u6027\u548c\u76d1\u63a7\u80fd\u529b\uff0c\u540c\u65f6\u5177\u5907\u826f\u597d\u7684\u6027\u80fd\u8868\u73b0\u548c\u53ef\u6269\u5c55\u6027\uff0c\u9002\u5408\u5728\u7ea6\u675f\u8bbe\u5907\u548c\u591a\u5143\u5229\u76ca\u76f8\u5173\u65b9\u4e2d\u5e94\u7528\u3002"}}
{"id": "2508.21558", "categories": ["cs.CR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2508.21558", "abs": "https://arxiv.org/abs/2508.21558", "authors": ["Federica Bianchi", "Edoardo Di Paolo", "Angelo Spognardi"], "title": "Generalized Encrypted Traffic Classification Using Inter-Flow Signals", "comment": "Accepted manuscript at Availability, Reliability and Security (ARES\n  2025), published in Lecture Notes in Computer Science, vol. 15992, Springer,\n  Cham. DOI: https://doi.org/10.1007/978-3-032-00624-0_11", "summary": "In this paper, we present a novel encrypted traffic classification model that\noperates directly on raw PCAP data without requiring prior assumptions about\ntraffic type. Unlike existing methods, it is generalizable across multiple\nclassification tasks and leverages inter-flow signals - an innovative\nrepresentation that captures temporal correlations and packet volume\ndistributions across flows. Experimental results show that our model\noutperforms well-established methods in nearly every classification task and\nacross most datasets, achieving up to 99% accuracy in some cases, demonstrating\nits robustness and adaptability.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u539f\u59cbPCAP\u6570\u636e\u7684\u52a0\u5bc6\u6d41\u91cf\u5206\u7c7b\u6a21\u578b\uff0c\u5229\u7528\u521b\u65b0\u7684\u8de8\u6d41\u4fe1\u53f7\u8868\u5f81\uff0c\u5728\u591a\u4e2a\u5206\u7c7b\u4efb\u52a1\u548c\u6570\u636e\u96c6\u4e0a\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u51c6\u786e\u7387\u6700\u9ad8\u8fbe99%\u3002", "motivation": "\u73b0\u6709\u52a0\u5bc6\u6d41\u91cf\u5206\u7c7b\u65b9\u6cd5\u901a\u5e38\u9700\u8981\u5148\u9a8c\u5047\u8bbe\u4e14\u7f3a\u4e4f\u8de8\u4efb\u52a1\u6cdb\u5316\u80fd\u529b\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u76f4\u63a5\u5904\u7406\u539f\u59cb\u6570\u636e\u3001\u6355\u6349\u6d41\u91cf\u65f6\u5e8f\u76f8\u5173\u6027\u548c\u5206\u5e03\u7279\u5f81\u7684\u901a\u7528\u65b9\u6cd5\u3002", "method": "\u5f00\u53d1\u4e86\u76f4\u63a5\u5904\u7406\u539f\u59cbPCAP\u6570\u636e\u7684\u6a21\u578b\uff0c\u521b\u65b0\u6027\u5730\u4f7f\u7528\u8de8\u6d41\u4fe1\u53f7\u8868\u5f81\u6765\u6355\u83b7\u6d41\u95f4\u7684\u65f6\u95f4\u76f8\u5173\u6027\u548c\u6570\u636e\u5305\u91cf\u5206\u5e03\uff0c\u65e0\u9700\u9884\u5b9a\u4e49\u6d41\u91cf\u7c7b\u578b\u5047\u8bbe\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u6a21\u578b\u5728\u51e0\u4e4e\u6240\u6709\u5206\u7c7b\u4efb\u52a1\u548c\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\u90fd\u4f18\u4e8e\u73b0\u6709\u6210\u719f\u65b9\u6cd5\uff0c\u90e8\u5206\u60c5\u51b5\u4e0b\u51c6\u786e\u7387\u8fbe\u523099%\uff0c\u5c55\u73b0\u51fa\u4f18\u5f02\u7684\u9c81\u68d2\u6027\u548c\u9002\u5e94\u6027\u3002", "conclusion": "\u8be5\u7814\u7a76\u63d0\u51fa\u7684\u57fa\u4e8e\u8de8\u6d41\u4fe1\u53f7\u7684\u52a0\u5bc6\u6d41\u91cf\u5206\u7c7b\u65b9\u6cd5\u5177\u6709\u5f3a\u5927\u7684\u6cdb\u5316\u80fd\u529b\u548c\u9ad8\u51c6\u786e\u7387\uff0c\u4e3a\u52a0\u5bc6\u6d41\u91cf\u5206\u6790\u63d0\u4f9b\u4e86\u65b0\u7684\u6709\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.21579", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21579", "abs": "https://arxiv.org/abs/2508.21579", "authors": ["Ziyue Wang", "Liyi Zhou"], "title": "Agentic Discovery and Validation of Android App Vulnerabilities", "comment": null, "summary": "Existing Android vulnerability detection tools overwhelm teams with thousands\nof low-signal warnings yet uncover few true positives. Analysts spend days\ntriaging these results, creating a bottleneck in the security pipeline.\nMeanwhile, genuinely exploitable vulnerabilities often slip through, leaving\nopportunities open to malicious counterparts.\n  We introduce A2, a system that mirrors how security experts analyze and\nvalidate Android vulnerabilities through two complementary phases: (i) Agentic\nVulnerability Discovery, which reasons about application security by combining\nsemantic understanding with traditional security tools; and (ii) Agentic\nVulnerability Validation, which systematically validates vulnerabilities across\nAndroid's multi-modal attack surface-UI interactions, inter-component\ncommunication, file system operations, and cryptographic computations.\n  On the Ghera benchmark (n=60), A2 achieves 78.3% coverage, surpassing\nstate-of-the-art analyzers (e.g., APKHunt 30.0%). Rather than overwhelming\nanalysts with thousands of warnings, A2 distills results into 82 speculative\nvulnerability findings, including 47 Ghera cases and 28 additional true\npositives. Crucially, A2 then generates working Proof-of-Concepts (PoCs) for 51\nof these speculative findings, transforming them into validated vulnerability\nfindings that provide direct, self-confirming evidence of exploitability.\n  In real-world evaluation on 169 production APKs, A2 uncovers 104\ntrue-positive zero-day vulnerabilities. Among these, 57 (54.8%) are\nself-validated with automatically generated PoCs, including a medium-severity\nvulnerability in a widely used application with over 10 million installs.", "AI": {"tldr": "A2\u662f\u4e00\u4e2a\u65b0\u578bAndroid\u6f0f\u6d1e\u68c0\u6d4b\u7cfb\u7edf\uff0c\u901a\u8fc7\u667a\u80fd\u4ee3\u7406\u53d1\u73b0\u548c\u9a8c\u8bc1\u6f0f\u6d1e\uff0c\u5927\u5e45\u51cf\u5c11\u8bef\u62a5\u5e76\u81ea\u52a8\u751f\u6210PoC\u8bc1\u660e\uff0c\u5728\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8fbe\u523078.3%\u8986\u76d6\u7387\uff0c\u5728\u771f\u5b9e\u5e94\u7528\u4e2d\u53d1\u73b0\u4e86104\u4e2a\u96f6\u65e5\u6f0f\u6d1e\u3002", "motivation": "\u73b0\u6709Android\u6f0f\u6d1e\u68c0\u6d4b\u5de5\u5177\u4ea7\u751f\u5927\u91cf\u4f4e\u4fe1\u53f7\u8b66\u544a\uff0c\u5206\u6790\u5e08\u9700\u8981\u82b1\u8d39\u6570\u5929\u65f6\u95f4\u7b5b\u9009\uff0c\u800c\u771f\u6b63\u53ef\u5229\u7528\u7684\u6f0f\u6d1e\u5f80\u5f80\u88ab\u9057\u6f0f\uff0c\u9020\u6210\u5b89\u5168\u7ba1\u9053\u74f6\u9888\u3002", "method": "A2\u7cfb\u7edf\u91c7\u7528\u53cc\u9636\u6bb5\u65b9\u6cd5\uff1a(i)\u667a\u80fd\u6f0f\u6d1e\u53d1\u73b0-\u7ed3\u5408\u8bed\u4e49\u7406\u89e3\u548c\u4f20\u7edf\u5b89\u5168\u5de5\u5177\u5206\u6790\u5e94\u7528\u5b89\u5168\uff1b(ii)\u667a\u80fd\u6f0f\u6d1e\u9a8c\u8bc1-\u7cfb\u7edf\u6027\u5730\u5728Android\u591a\u6a21\u6001\u653b\u51fb\u9762\uff08UI\u4ea4\u4e92\u3001\u7ec4\u4ef6\u901a\u4fe1\u3001\u6587\u4ef6\u64cd\u4f5c\u3001\u52a0\u5bc6\u8ba1\u7b97\uff09\u9a8c\u8bc1\u6f0f\u6d1e\u3002", "result": "\u5728Ghera\u57fa\u51c6\u6d4b\u8bd5(n=60)\u4e2d\u8fbe\u523078.3%\u8986\u76d6\u7387\uff0c\u8fdc\u8d85\u73b0\u6709\u6700\u4f73\u5206\u6790\u5668(\u5982APKHunt 30.0%)\u3002\u751f\u621082\u4e2a\u63a8\u6d4b\u6027\u6f0f\u6d1e\u53d1\u73b0\uff0c\u5176\u4e2d51\u4e2a\u81ea\u52a8\u751f\u6210\u5de5\u4f5cPoC\u3002\u5728169\u4e2a\u751f\u4ea7APK\u4e2d\u53d1\u73b0104\u4e2a\u96f6\u65e5\u6f0f\u6d1e\uff0c54.8%\u81ea\u52a8\u9a8c\u8bc1\u3002", "conclusion": "A2\u7cfb\u7edf\u901a\u8fc7\u6a21\u62df\u5b89\u5168\u4e13\u5bb6\u5206\u6790\u65b9\u5f0f\uff0c\u663e\u8457\u63d0\u5347Android\u6f0f\u6d1e\u68c0\u6d4b\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\uff0c\u81ea\u52a8\u751f\u6210PoC\u8bc1\u660e\u6781\u5927\u51cf\u8f7b\u5206\u6790\u5e08\u8d1f\u62c5\uff0c\u662fAndroid\u5b89\u5168\u5206\u6790\u7684\u91cd\u8981\u8fdb\u6b65\u3002"}}
{"id": "2508.21602", "categories": ["cs.CR", "cs.IT", "math.IT"], "pdf": "https://arxiv.org/pdf/2508.21602", "abs": "https://arxiv.org/abs/2508.21602", "authors": ["Tomasz Kazana"], "title": "Condense to Conduct and Conduct to Condense", "comment": null, "summary": "In this paper we give the first examples of low-conductance permutations. The\nnotion of conductance of permutations was introduced in the paper\n\"Indifferentiability of Confusion-Diffusion Networks\" by Dodis et al., where\nthe search for low-conductance permutations was initiated and motivated. In\nthis paper we not only give the desired examples, but also make a general\ncharacterization of the problem -- i.e. we show that low-conductance\npermutations are equivalent to permutations that have the information-theoretic\nproperties of the so-called Multi-Source-Somewhere-Condensers.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u63d0\u51fa\u4e86\u4f4e\u7535\u5bfc\u7f6e\u6362\u7684\u5177\u4f53\u5b9e\u4f8b\uff0c\u5e76\u5efa\u7acb\u4e86\u4f4e\u7535\u5bfc\u7f6e\u6362\u4e0e\u591a\u6e90\u67d0\u5904\u538b\u7f29\u5668\u4fe1\u606f\u7406\u8bba\u7279\u6027\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb", "motivation": "Dodis\u7b49\u4eba\u7684\u8bba\u6587\u5f15\u5165\u4e86\u7f6e\u6362\u7535\u5bfc\u7684\u6982\u5ff5\u5e76\u5f00\u59cb\u5bfb\u627e\u4f4e\u7535\u5bfc\u7f6e\u6362\uff0c\u672c\u6587\u65e8\u5728\u63d0\u4f9b\u8fd9\u6837\u7684\u5b9e\u4f8b\u5e76\u6df1\u5165\u5206\u6790\u8be5\u95ee\u9898", "method": "\u901a\u8fc7\u7406\u8bba\u5206\u6790\u548c\u6784\u9020\u6027\u8bc1\u660e\uff0c\u5efa\u7acb\u4e86\u4f4e\u7535\u5bfc\u7f6e\u6362\u4e0e\u591a\u6e90\u67d0\u5904\u538b\u7f29\u5668\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb\uff0c\u5e76\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u4f4e\u7535\u5bfc\u7f6e\u6362\u5b9e\u4f8b", "result": "\u6210\u529f\u6784\u9020\u4e86\u9996\u4e2a\u4f4e\u7535\u5bfc\u7f6e\u6362\u5b9e\u4f8b\uff0c\u8bc1\u660e\u4e86\u4f4e\u7535\u5bfc\u7f6e\u6362\u4e0e\u5177\u6709\u7279\u5b9a\u4fe1\u606f\u7406\u8bba\u7279\u6027\u7684\u7f6e\u6362\u4e4b\u95f4\u7684\u7b49\u4ef7\u6027", "conclusion": "\u672c\u6587\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u671f\u671b\u7684\u4f4e\u7535\u5bfc\u7f6e\u6362\u5b9e\u4f8b\uff0c\u8fd8\u5b8c\u6574\u523b\u753b\u4e86\u8be5\u95ee\u9898\u7684\u672c\u8d28\uff0c\u4e3a\u540e\u7eed\u5bc6\u7801\u5b66\u7f51\u7edc\u7684\u5b89\u5168\u6027\u5206\u6790\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840"}}
{"id": "2508.21606", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21606", "abs": "https://arxiv.org/abs/2508.21606", "authors": ["Nishant Chinnasami", "Rasha Karakchi"], "title": "Hybrid Cryptographic Monitoring System for Side-Channel Attack Detection on PYNQ SoCs", "comment": "This paper is submitted at Supercomputing (SC'25)", "summary": "AES-128 encryption is theoretically secure but vulnerable in practical\ndeployments due to timing and fault injection attacks on embedded systems. This\nwork presents a lightweight dual-detection framework combining statistical\nthresholding and machine learning (ML) for real-time anomaly detection. By\nsimulating anomalies via delays and ciphertext corruption, we collect timing\nand data features to evaluate two strategies: (1) a statistical threshold\nmethod based on execution time and (2) a Random Forest classifier trained on\nblock-level anomalies. Implemented on CPU and FPGA (PYNQ-Z1), our results show\nthat the ML approach outperforms static thresholds in accuracy, while\nmaintaining real-time feasibility on embedded platforms. The framework operates\nwithout modifying AES internals or relying on hardware performance counters.\nThis makes it especially suitable for low-power, resource-constrained systems\nwhere detection accuracy and computational efficiency must be balanced.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u7edf\u8ba1\u9608\u503c\u548c\u673a\u5668\u5b66\u4e60\u7684\u8f7b\u91cf\u7ea7\u53cc\u68c0\u6d4b\u6846\u67b6\uff0c\u7528\u4e8eAES-128\u52a0\u5bc6\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5b9e\u65f6\u5f02\u5e38\u68c0\u6d4b\uff0c\u65e0\u9700\u4fee\u6539AES\u5185\u90e8\u7ed3\u6784\u6216\u4f9d\u8d56\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5668\u3002", "motivation": "AES-128\u52a0\u5bc6\u867d\u7136\u5728\u7406\u8bba\u4e0a\u5b89\u5168\uff0c\u4f46\u5728\u5b9e\u9645\u5d4c\u5165\u5f0f\u7cfb\u7edf\u90e8\u7f72\u4e2d\u5bb9\u6613\u53d7\u5230\u65f6\u5e8f\u548c\u6545\u969c\u6ce8\u5165\u653b\u51fb\uff0c\u9700\u8981\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u5b9e\u65f6\u68c0\u6d4b\u65b9\u6848\u3002", "method": "\u901a\u8fc7\u6a21\u62df\u5ef6\u8fdf\u548c\u5bc6\u6587\u635f\u574f\u6765\u6536\u96c6\u65f6\u5e8f\u548c\u6570\u636e\u7279\u5f81\uff0c\u8bc4\u4f30\u4e24\u79cd\u7b56\u7565\uff1a\u57fa\u4e8e\u6267\u884c\u65f6\u95f4\u7684\u7edf\u8ba1\u9608\u503c\u65b9\u6cd5\u548c\u57fa\u4e8e\u5757\u7ea7\u5f02\u5e38\u7684\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u5728CPU\u548cFPGA\u5e73\u53f0\u4e0a\u5b9e\u73b0\u3002", "result": "\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u5728\u51c6\u786e\u6027\u4e0a\u4f18\u4e8e\u9759\u6001\u9608\u503c\u65b9\u6cd5\uff0c\u540c\u65f6\u5728\u5d4c\u5165\u5f0f\u5e73\u53f0\u4e0a\u4fdd\u6301\u5b9e\u65f6\u53ef\u884c\u6027\u3002", "conclusion": "\u8be5\u6846\u67b6\u7279\u522b\u9002\u7528\u4e8e\u9700\u8981\u5728\u68c0\u6d4b\u7cbe\u5ea6\u548c\u8ba1\u7b97\u6548\u7387\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u7684\u4f4e\u529f\u8017\u3001\u8d44\u6e90\u53d7\u9650\u7cfb\u7edf\u3002"}}
{"id": "2508.21636", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.21636", "abs": "https://arxiv.org/abs/2508.21636", "authors": ["Cristina Improta"], "title": "Detecting Stealthy Data Poisoning Attacks in AI Code Generators", "comment": "Accepted to the 3rd IEEE International Workshop on Reliable and\n  Secure AI for Software Engineering (ReSAISE, 2025), co-located with ISSRE\n  2025", "summary": "Deep learning (DL) models for natural language-to-code generation have become\nintegral to modern software development pipelines. However, their heavy\nreliance on large amounts of data, often collected from unsanitized online\nsources, exposes them to data poisoning attacks, where adversaries inject\nmalicious samples to subtly bias model behavior. Recent targeted attacks\nsilently replace secure code with semantically equivalent but vulnerable\nimplementations without relying on explicit triggers to launch the attack,\nmaking it especially hard for detection methods to distinguish clean from\npoisoned samples. We present a systematic study on the effectiveness of\nexisting poisoning detection methods under this stealthy threat model.\nSpecifically, we perform targeted poisoning on three DL models (CodeBERT,\nCodeT5+, AST-T5), and evaluate spectral signatures analysis, activation\nclustering, and static analysis as defenses. Our results show that all methods\nstruggle to detect triggerless poisoning, with representation-based approaches\nfailing to isolate poisoned samples and static analysis suffering false\npositives and false negatives, highlighting the need for more robust,\ntrigger-independent defenses for AI-assisted code generation.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u7814\u7a76\u4e86\u73b0\u6709\u6570\u636e\u6295\u6bd2\u68c0\u6d4b\u65b9\u6cd5\u5728\u65e0\u89e6\u53d1\u5668\u653b\u51fb\u4e0b\u7684\u6709\u6548\u6027\uff0c\u53d1\u73b0\u8c31\u7b7e\u540d\u5206\u6790\u3001\u6fc0\u6d3b\u805a\u7c7b\u548c\u9759\u6001\u5206\u6790\u7b49\u65b9\u6cd5\u5728\u68c0\u6d4b\u65e0\u89e6\u53d1\u5668\u7684\u4ee3\u7801\u6295\u6bd2\u653b\u51fb\u65f6\u6548\u679c\u4e0d\u4f73\uff0c\u51f8\u663e\u4e86\u9700\u8981\u66f4\u9c81\u68d2\u7684\u9632\u5fa1\u673a\u5236\u3002", "motivation": "\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\u751f\u6210\u6a21\u578b\u4e25\u91cd\u4f9d\u8d56\u5927\u91cf\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5f80\u5f80\u6765\u81ea\u672a\u6e05\u7406\u7684\u5728\u7ebf\u6765\u6e90\uff0c\u4f7f\u5176\u5bb9\u6613\u53d7\u5230\u6570\u636e\u6295\u6bd2\u653b\u51fb\u3002\u7279\u522b\u662f\u65e0\u89e6\u53d1\u5668\u7684\u9488\u5bf9\u6027\u653b\u51fb\u80fd\u591f\u6084\u65e0\u58f0\u606f\u5730\u7528\u8bed\u4e49\u7b49\u4ef7\u4f46\u5b58\u5728\u6f0f\u6d1e\u7684\u5b9e\u73b0\u66ff\u6362\u5b89\u5168\u4ee3\u7801\uff0c\u4f7f\u5f97\u68c0\u6d4b\u65b9\u6cd5\u96be\u4ee5\u533a\u5206\u5e72\u51c0\u6837\u672c\u548c\u6295\u6bd2\u6837\u672c\u3002", "method": "\u5bf9\u4e09\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff08CodeBERT\u3001CodeT5+\u3001AST-T5\uff09\u8fdb\u884c\u9488\u5bf9\u6027\u6295\u6bd2\u653b\u51fb\uff0c\u5e76\u8bc4\u4f30\u4e09\u79cd\u9632\u5fa1\u65b9\u6cd5\uff1a\u8c31\u7b7e\u540d\u5206\u6790\u3001\u6fc0\u6d3b\u805a\u7c7b\u548c\u9759\u6001\u5206\u6790\u3002", "result": "\u6240\u6709\u68c0\u6d4b\u65b9\u6cd5\u5728\u68c0\u6d4b\u65e0\u89e6\u53d1\u5668\u6295\u6bd2\u65f6\u90fd\u8868\u73b0\u4e0d\u4f73\uff1a\u57fa\u4e8e\u8868\u793a\u7684\u65b9\u6cd5\u65e0\u6cd5\u9694\u79bb\u6295\u6bd2\u6837\u672c\uff0c\u9759\u6001\u5206\u6790\u5b58\u5728\u5047\u9633\u6027\u548c\u5047\u9634\u6027\u95ee\u9898\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u8868\u660e\u9700\u8981\u5f00\u53d1\u66f4\u9c81\u68d2\u7684\u3001\u4e0d\u4f9d\u8d56\u89e6\u53d1\u5668\u7684\u9632\u5fa1\u673a\u5236\u6765\u4fdd\u62a4AI\u8f85\u52a9\u4ee3\u7801\u751f\u6210\u7cfb\u7edf\u7684\u5b89\u5168\u3002"}}
{"id": "2508.21654", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.21654", "abs": "https://arxiv.org/abs/2508.21654", "authors": ["Daryna Oliynyk", "Rudolf Mayer", "Kathrin Grosse", "Andreas Rauber"], "title": "I Stolenly Swear That I Am Up to (No) Good: Design and Evaluation of Model Stealing Attacks", "comment": "Under review", "summary": "Model stealing attacks endanger the confidentiality of machine learning\nmodels offered as a service. Although these models are kept secret, a malicious\nparty can query a model to label data samples and train their own substitute\nmodel, violating intellectual property. While novel attacks in the field are\ncontinually being published, their design and evaluations are not standardised,\nmaking it challenging to compare prior works and assess progress in the field.\nThis paper is the first to address this gap by providing recommendations for\ndesigning and evaluating model stealing attacks. To this end, we study the\nlargest group of attacks that rely on training a substitute model -- those\nattacking image classification models. We propose the first comprehensive\nthreat model and develop a framework for attack comparison. Further, we analyse\nattack setups from related works to understand which tasks and models have been\nstudied the most. Based on our findings, we present best practices for attack\ndevelopment before, during, and beyond experiments and derive an extensive list\nof open research questions regarding the evaluation of model stealing attacks.\nOur findings and recommendations also transfer to other problem domains, hence\nestablishing the first generic evaluation methodology for model stealing\nattacks.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u6a21\u578b\u76d7\u7a83\u653b\u51fb\u7684\u9996\u4e2a\u7efc\u5408\u6027\u5a01\u80c1\u6a21\u578b\u548c\u8bc4\u4f30\u6846\u67b6\uff0c\u4e3a\u8bbe\u8ba1\u548c\u8bc4\u4f30\u6a21\u578b\u76d7\u7a83\u653b\u51fb\u63d0\u4f9b\u4e86\u6807\u51c6\u5316\u5efa\u8bae\uff0c\u4ee5\u89e3\u51b3\u8be5\u9886\u57df\u7f3a\u4e4f\u7edf\u4e00\u8bc4\u4f30\u6807\u51c6\u7684\u95ee\u9898\u3002", "motivation": "\u6a21\u578b\u76d7\u7a83\u653b\u51fb\u5a01\u80c1\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u4fdd\u5bc6\u6027\uff0c\u4f46\u8be5\u9886\u57df\u7684\u653b\u51fb\u8bbe\u8ba1\u548c\u8bc4\u4f30\u7f3a\u4e4f\u6807\u51c6\u5316\uff0c\u5bfc\u81f4\u4e0d\u540c\u7814\u7a76\u96be\u4ee5\u6bd4\u8f83\u548c\u8bc4\u4f30\u8fdb\u5c55\u3002", "method": "\u7814\u7a76\u4e86\u4f9d\u8d56\u8bad\u7ec3\u66ff\u4ee3\u6a21\u578b\u7684\u56fe\u50cf\u5206\u7c7b\u653b\u51fb\uff0c\u63d0\u51fa\u7efc\u5408\u6027\u5a01\u80c1\u6a21\u578b\u548c\u653b\u51fb\u6bd4\u8f83\u6846\u67b6\uff0c\u5206\u6790\u76f8\u5173\u5de5\u4f5c\u7684\u653b\u51fb\u8bbe\u7f6e\u3002", "result": "\u63d0\u51fa\u4e86\u653b\u51fb\u5f00\u53d1\u7684\u6700\u4f73\u5b9e\u8df5\u548c\u5b8c\u6574\u7684\u5f00\u653f\u7814\u7a76\u95ee\u9898\u6e05\u5355\uff0c\u5efa\u7acb\u4e86\u9996\u4e2a\u901a\u7528\u7684\u6a21\u578b\u76d7\u7a83\u653b\u51fb\u8bc4\u4f30\u65b9\u6cd5\u3002", "conclusion": "\u8be5\u7814\u7a76\u4e3a\u6a21\u578b\u76d7\u7a83\u653b\u51fb\u9886\u57df\u63d0\u4f9b\u4e86\u6807\u51c6\u5316\u7684\u8bc4\u4f30\u6846\u67b6\uff0c\u5176\u53d1\u73b0\u548c\u5efa\u8bae\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u95ee\u9898\u9886\u57df\uff0c\u6709\u52a9\u4e8e\u63a8\u52a8\u8be5\u9886\u57df\u7684\u53ef\u6bd4\u6027\u7814\u7a76\u548c\u8fdb\u5c55\u8bc4\u4f30\u3002"}}
{"id": "2508.21669", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.21669", "abs": "https://arxiv.org/abs/2508.21669", "authors": ["V\u00edctor Mayoral-Vilches", "Per Mannermaa Rynning"], "title": "Cybersecurity AI: Hacking the AI Hackers via Prompt Injection", "comment": null, "summary": "We demonstrate how AI-powered cybersecurity tools can be turned against\nthemselves through prompt injection attacks. Prompt injection is reminiscent of\ncross-site scripting (XSS): malicious text is hidden within seemingly trusted\ncontent, and when the system processes it, that text is transformed into\nunintended instructions. When AI agents designed to find and exploit\nvulnerabilities interact with malicious web servers, carefully crafted reponses\ncan hijack their execution flow, potentially granting attackers system access.\nWe present proof-of-concept exploits against the Cybersecurity AI (CAI)\nframework and its CLI tool, and detail our mitigations against such attacks in\na multi-layered defense implementation. Our findings indicate that prompt\ninjection is a recurring and systemic issue in LLM-based architectures, one\nthat will require dedicated work to address, much as the security community has\nhad to do with XSS in traditional web applications.", "AI": {"tldr": "AI\u7f51\u7edc\u5b89\u5168\u5de5\u5177\u5b58\u5728\u63d0\u793a\u6ce8\u5165\u6f0f\u6d1e\uff0c\u653b\u51fb\u8005\u53ef\u901a\u8fc7\u6076\u610f\u5185\u5bb9\u52ab\u6301AI\u6267\u884c\u6d41\u7a0b\u83b7\u53d6\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\uff0c\u7c7b\u4f3cXSS\u653b\u51fb\u3002", "motivation": "\u63ed\u793aAI\u9a71\u52a8\u7684\u7f51\u7edc\u5b89\u5168\u5de5\u5177\u9762\u4e34\u7684\u65b0\u578b\u5b89\u5168\u5a01\u80c1\u2014\u2014\u63d0\u793a\u6ce8\u5165\u653b\u51fb\uff0c\u8fd9\u79cd\u653b\u51fb\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u4f20\u7edfWeb\u5e94\u7528\u4e2d\u7684XSS\u6f0f\u6d1e\uff0c\u53ef\u80fd\u88ab\u6076\u610f\u5229\u7528\u3002", "method": "\u901a\u8fc7\u5bf9\u7f51\u7edc\u5b89\u5168AI\u6846\u67b6\u53ca\u5176CLI\u5de5\u5177\u8fdb\u884c\u6982\u5ff5\u9a8c\u8bc1\u653b\u51fb\uff0c\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u7cbe\u5fc3\u6784\u9020\u7684\u54cd\u5e94\u5185\u5bb9\u52ab\u6301AI\u4ee3\u7406\u7684\u6267\u884c\u6d41\u7a0b\u3002", "result": "\u6210\u529f\u6f14\u793a\u4e86\u9488\u5bf9CAI\u6846\u67b6\u7684\u6982\u5ff5\u9a8c\u8bc1\u653b\u51fb\uff0c\u8bc1\u660e\u63d0\u793a\u6ce8\u5165\u662fLLM\u67b6\u6784\u4e2d\u666e\u904d\u5b58\u5728\u7684\u7cfb\u7edf\u6027\u5b89\u5168\u95ee\u9898\u3002", "conclusion": "\u63d0\u793a\u6ce8\u5165\u662fLLM\u67b6\u6784\u4e2d\u53cd\u590d\u51fa\u73b0\u7684\u7cfb\u7edf\u6027\u5b89\u5168\u95ee\u9898\uff0c\u9700\u8981\u50cf\u4f20\u7edfXSS\u9632\u62a4\u4e00\u6837\u6295\u5165\u4e13\u95e8\u5de5\u4f5c\u6765\u89e3\u51b3\uff0c\u5e76\u63d0\u51fa\u4e86\u591a\u5c42\u9632\u5fa1\u5b9e\u65bd\u65b9\u6848\u3002"}}
{"id": "2508.21727", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.21727", "abs": "https://arxiv.org/abs/2508.21727", "authors": ["Jiazheng Xing", "Hai Ci", "Hongbin Xu", "Hangjie Yuan", "Yong Liu", "Mike Zheng Shou"], "title": "OptMark: Robust Multi-bit Diffusion Watermarking via Inference Time Optimization", "comment": null, "summary": "Watermarking diffusion-generated images is crucial for copyright protection\nand user tracking. However, current diffusion watermarking methods face\nsignificant limitations: zero-bit watermarking systems lack the capacity for\nlarge-scale user tracking, while multi-bit methods are highly sensitive to\ncertain image transformations or generative attacks, resulting in a lack of\ncomprehensive robustness. In this paper, we propose OptMark, an\noptimization-based approach that embeds a robust multi-bit watermark into the\nintermediate latents of the diffusion denoising process. OptMark strategically\ninserts a structural watermark early to resist generative attacks and a detail\nwatermark late to withstand image transformations, with tailored regularization\nterms to preserve image quality and ensure imperceptibility. To address the\nchallenge of memory consumption growing linearly with the number of denoising\nsteps during optimization, OptMark incorporates adjoint gradient methods,\nreducing memory usage from O(N) to O(1). Experimental results demonstrate that\nOptMark achieves invisible multi-bit watermarking while ensuring robust\nresilience against valuemetric transformations, geometric transformations,\nediting, and regeneration attacks.", "AI": {"tldr": "OptMark\u662f\u4e00\u79cd\u57fa\u4e8e\u4f18\u5316\u7684\u591a\u6bd4\u7279\u6c34\u5370\u65b9\u6cd5\uff0c\u901a\u8fc7\u5728\u6269\u6563\u53bb\u566a\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6f5c\u5728\u7a7a\u95f4\u4e2d\u5d4c\u5165\u6c34\u5370\uff0c\u5b9e\u73b0\u4e86\u5bf9\u56fe\u50cf\u53d8\u6362\u548c\u751f\u6210\u653b\u51fb\u7684\u9c81\u68d2\u6027\u4fdd\u62a4\u3002", "motivation": "\u5f53\u524d\u6269\u6563\u6c34\u5370\u65b9\u6cd5\u5b58\u5728\u5c40\u9650\u6027\uff1a\u96f6\u6bd4\u7279\u6c34\u5370\u7cfb\u7edf\u7f3a\u4e4f\u5927\u89c4\u6a21\u7528\u6237\u8ddf\u8e2a\u80fd\u529b\uff0c\u800c\u591a\u6bd4\u7279\u65b9\u6cd5\u5bf9\u67d0\u4e9b\u56fe\u50cf\u53d8\u6362\u6216\u751f\u6210\u653b\u51fb\u9ad8\u5ea6\u654f\u611f\uff0c\u7f3a\u4e4f\u5168\u9762\u7684\u9c81\u68d2\u6027\u3002", "method": "\u5728\u6269\u6563\u53bb\u566a\u8fc7\u7a0b\u4e2d\u65e9\u671f\u5d4c\u5165\u7ed3\u6784\u6c34\u5370\u4ee5\u62b5\u6297\u751f\u6210\u653b\u51fb\uff0c\u540e\u671f\u5d4c\u5165\u7ec6\u8282\u6c34\u5370\u4ee5\u62b5\u6297\u56fe\u50cf\u53d8\u6362\uff0c\u4f7f\u7528\u5b9a\u5236\u6b63\u5219\u5316\u9879\u4fdd\u6301\u56fe\u50cf\u8d28\u91cf\u548c\u4e0d\u53ef\u611f\u77e5\u6027\uff0c\u5e76\u91c7\u7528\u4f34\u968f\u68af\u5ea6\u65b9\u6cd5\u5c06\u5185\u5b58\u4f7f\u7528\u4eceO(N)\u964d\u4f4e\u5230O(1)\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eOptMark\u5b9e\u73b0\u4e86\u4e0d\u53ef\u89c1\u7684\u591a\u6bd4\u7279\u6c34\u5370\uff0c\u540c\u65f6\u5bf9\u6570\u503c\u53d8\u6362\u3001\u51e0\u4f55\u53d8\u6362\u3001\u7f16\u8f91\u548c\u518d\u751f\u653b\u51fb\u5177\u6709\u9c81\u68d2\u6027\u3002", "conclusion": "OptMark\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u80fd\u591f\u5728\u4fdd\u62a4\u7248\u6743\u548c\u7528\u6237\u8ddf\u8e2a\u7684\u540c\u65f6\uff0c\u786e\u4fdd\u6c34\u5370\u5bf9\u5404\u79cd\u653b\u51fb\u7684\u9c81\u68d2\u6027\u548c\u4e0d\u53ef\u611f\u77e5\u6027\u3002"}}
